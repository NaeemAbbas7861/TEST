{"version":3,"sources":["webpack:///src/app/superAdmin/user/user.page.html","webpack:///src/app/services/toast.service.ts","webpack:///src/app/superAdmin/user/user-routing.module.ts","webpack:///src/app/superAdmin/user/user.module.ts","webpack:///src/app/superAdmin/user/user.page.scss","webpack:///src/app/superAdmin/user/user.page.ts"],"names":["ToastService","toastCtrl","message","color","ok","duration","toast","dismiss","create","position","present","providedIn","routes","path","component","UserPageRoutingModule","imports","forChild","exports","UserPageModule","declarations","UserPage","loadingController","route","api","toastServices","filtercart","getCustomer","GetShopOwner","GetAllUser","type","loading","GetUserData","subscribe","res","console","log","customer","disabledCustomer","filter","x","isDisabled","activeCustomer","err","shopowner","disabledShopOwner","activeShopowner","users","event","ngOnInit","setTimeout","target","complete","ev","id","UpdateUserStatus","doRefresh","selector","template"],"mappings":"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","file":"user-user-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"mybg\\\">\\n  <ion-toolbar color=\\\"mytheme\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button color=\\\"dark\\\"></ion-menu-button> \\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center\\\" color=\\\"dark\\\">Users</ion-title>\\n    <ion-back-button  color=\\\"dark\\\" defaultHref=\\\"/\\\" slot=\\\"end\\\"> </ion-back-button>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content  class=\\\"ion-padding\\\"  color=\\\"light\\\"  >\\n  <div>\\n    \\n        <div [ngSwitch]=\\\"type\\\" *ngIf=\\\"activeCustomer\\\">\\n          <ion-list *ngSwitchCase=\\\"'ActiveCustomer'\\\">\\n            <ion-item>\\n              <ion-label ><b>Active Customer</b></ion-label>\\n            </ion-item>\\n          <ion-item *ngFor=\\\"let  activeCustomer of activeCustomer\\\"> \\n              <h6  style=\\\"font-size: 14px;\\\">  {{ activeCustomer.firstName }} {{activeCustomer.lastName}}</h6><br>           \\n              <ion-button  color=\\\"mytheme\\\" size=\\\"small\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)= \\\"UpdateUserStatus(activeCustomer.id)\\\">Disable</ion-button>\\n            </ion-item>\\n          </ion-list>\\n        </div>\\n        <div [ngSwitch]=\\\"type\\\" *ngIf=\\\"users\\\">\\n          <ion-list *ngSwitchCase=\\\"'users'\\\">\\n            <ion-item>\\n              <ion-label ><b>All Users</b></ion-label>\\n            </ion-item>\\n          <ion-item *ngFor=\\\"let  user of users\\\"> \\n               <h6 style=\\\"font-size: 14px;\\\">  {{ user.firstName }} {{user.lastName}}</h6><br>   \\n               <ion-button *ngIf=\\\"user.isDisabled===false \\\"  color=\\\"mytheme\\\" size=\\\"small\\\" color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"UpdateUserStatus(user.id)\\\"> Disabled</ion-button>\\n               <ion-button *ngIf=\\\"user.isDisabled===true \\\" color=\\\"mytheme\\\" size=\\\"small\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"UpdateUserStatus(user.id)\\\"> Active</ion-button>\\n               <ion-button *ngIf=\\\"user.isDisabled===null \\\" color=\\\"mytheme\\\" size=\\\"small\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"UpdateUserStatus(user.id)\\\"> Active</ion-button>\\n             \\n                </ion-item>\\n          </ion-list>\\n        </div>\\n\\n        <div [ngSwitch]=\\\"type\\\" *ngIf=\\\"disabledCustomer\\\">\\n            <ion-list *ngSwitchCase=\\\"'DisabledCustomer'\\\">\\n              <ion-item>\\n                <ion-label ><b>Disable Customer</b></ion-label>\\n              </ion-item>\\n              <ion-item *ngFor=\\\"let disabledCustomer of disabledCustomer\\\"> \\n                <h6 style=\\\"font-size: 14px;\\\">  {{ disabledCustomer.firstName }} {{disabledCustomer.lastName}}</h6><br> \\n                <ion-button  color=\\\"mytheme\\\" size=\\\"small\\\" color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"UpdateUserStatus(disabledCustomer.id)\\\"> Active</ion-button>\\n              </ion-item>\\n            </ion-list>\\n          </div>\\n\\n          <div [ngSwitch]=\\\"type\\\" *ngIf=\\\"activeShopowner\\\">\\n              <ion-list *ngSwitchCase=\\\"'ActiveShopowner'\\\">\\n                <ion-item>\\n                  <ion-label ><b>Active Shopowner</b></ion-label>\\n                </ion-item>\\n                <ion-item *ngFor=\\\"let activeShopowner of activeShopowner\\\"> \\n                  <h6 style=\\\"font-size: 14px;\\\">  {{ activeShopowner.firstName }} {{activeShopowner.lastName}}</h6><br>\\n                  <ion-button  color=\\\"mytheme\\\" size=\\\"small\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"UpdateUserStatus(activeShopowner.id)\\\" >Disable</ion-button>\\n                </ion-item>\\n              </ion-list>\\n          </div>\\n\\n          <div [ngSwitch]=\\\"type\\\" *ngIf=\\\"disabledShopOwner\\\">\\n                <ion-list *ngSwitchCase=\\\"'DisabledShopOwner'\\\">\\n                  <ion-item>\\n                    <ion-label ><b>Disable ShopOwner</b></ion-label>\\n                  </ion-item>\\n                  <ion-item *ngFor=\\\"let disabledShopOwner of disabledShopOwner\\\"> \\n                    <h6 style=\\\"font-size: 14px;\\\">  {{ disabledShopOwner.firstName }} {{disabledShopOwner.lastName}}</h6><br>\\n                    <ion-button  color=\\\"mytheme\\\" size=\\\"small\\\" color=\\\"success\\\" slot=\\\"end\\\" (click)=\\\"UpdateUserStatus(disabledShopOwner.id)\\\"> Active</ion-button>\\n                  </ion-item>\\n                </ion-list>\\n          </div>\\n  </div>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n</ion-content>\\n\\n\\n<div>\\n  <ion-segment [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\"  slot=\\\"end\\\"  value=\\\"users\\\"  class=\\\"segment23\\\" >\\n    <ion-segment-button value=\\\"users\\\"> <ion-icon name=\\\"people-outline\\\" size=\\\"large\\\"  ></ion-icon></ion-segment-button>\\n    <ion-segment-button value=\\\"ActiveCustomer\\\"> <ion-icon name=\\\"person-add-outline\\\" size=\\\"large\\\"  ></ion-icon></ion-segment-button>\\n    <ion-segment-button value=\\\"DisabledCustomer\\\">  <ion-icon name=\\\"person-remove-outline\\\" size=\\\"large\\\" class=\\\"segment23\\\"  ></ion-icon></ion-segment-button>\\n   </ion-segment>\\n</div>\\n\\n<div>\\n  <ion-segment [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\"  slot=\\\"end\\\" >\\n    <ion-segment-button value=\\\"ActiveShopowner\\\">  <ion-icon name=\\\"medkit-outline\\\" size=\\\"large\\\"  ></ion-icon></ion-segment-button>\\n    <ion-segment-button   value=\\\"DisabledShopOwner\\\" >   <ion-icon name=\\\"remove-circle-outline\\\"  size=\\\"large\\\"></ion-icon></ion-segment-button>\\n  </ion-segment>\\n</div>\\n\";","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  toast: HTMLIonToastElement;\r\n\r\n  constructor(public toastCtrl: ToastController) { }\r\n\r\n  async create(message: string, color = \"success\", ok = false, duration = 3000) {\r\n    if (this.toast) {\r\n      this.toast.dismiss();\r\n    }\r\n\r\n    this.toast = await this.toastCtrl.create({\r\n      message,\r\n      color: color,\r\n      duration: ok ? null : duration,\r\n      position: 'bottom',\r\n      // showCloseButton: ok,\r\n      // closeButtonText: 'OK'\r\n    });\r\n    this.toast.present();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserPage } from './user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserPageRoutingModule } from './user-routing.module';\n\nimport { UserPage } from './user.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserPageRoutingModule\n  ],\n  declarations: [UserPage]\n})\nexport class UserPageModule {}\n","export default \".input {\\n  font-size: 10px;\\n  color: #080808;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3VwZXJBZG1pbi91c2VyL0Q6XFxnaXRrdWlja3NhdmVcXG11bHRpc3RvcmUtbW9iaWxlLWFwcC9zcmNcXGFwcFxcc3VwZXJBZG1pblxcdXNlclxcdXNlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3N1cGVyQWRtaW4vdXNlci91c2VyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGVBQUE7RUFDQSxjQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9zdXBlckFkbWluL3VzZXIvdXNlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5wdXQge1xyXG4gICBcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAgIGNvbG9yOnJnYig4LCA4LCA4KTtcclxufSIsIi5pbnB1dCB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgY29sb3I6ICMwODA4MDg7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { from } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ToastService } from 'src/app/services/toast.service';\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.page.html',\n  styleUrls: ['./user.page.scss'],\n})\nexport class UserPage implements OnInit {\n  activeCustomer: any;\n  disabledCustomer: any;\n  activeShopowner: any;\n  disabledShopOwner: any;\n  users: any;\n  filtercart=[];\n  customer:any;\n  id :any;\n  type: string;\n  shopowner:any;\n  constructor(\n    private loadingController:LoadingController,\n    public route: ActivatedRoute,\n    public api: LoginService,\n    public toastServices: ToastService,\n  \n  ) { }\n\n  async ngOnInit() {\n   await this.getCustomer();\n   await this.GetShopOwner();\n   await this.GetAllUser();\n    this.type = 'users';\n  }\n\n\n  async getCustomer() {\n    const loading = await this.loadingController.create({\n      message: 'Loading'\n    });\n\n    await loading.present();\n\n    await this.api.GetUserData(3).subscribe(\n\n      res => {\n        console.log(res,\"Customers\");\n        this.customer = res;\n        // this.products = this.shop.products.filter(x=>x.quantity > 0);\n        this.disabledCustomer     = this.customer.filter(x=> x.isDisabled==true);\n        console.log(this.activeCustomer);\n        this.activeCustomer = this.customer.filter(x=> x.isDisabled!=true );\n        loading.dismiss();\n      },\n      err => {\n        console.log(err);\n        loading.dismiss();\n      }\n    );\n  }\n  async GetShopOwner() {\n    const loading = await this.loadingController.create({\n      message: 'Loading'\n    });\n\n    await loading.present();\n    await this.api.GetUserData(2).subscribe(\n      res => {\n        console.log(res,\"shopowner\");\n        this.shopowner = res;\n        this.disabledShopOwner     = this.shopowner.filter(x=> x.isDisabled==true);\n        console.log(\"Disabled Shopowners\", this.disabledShopOwner );\n        this.activeShopowner= this.shopowner.filter(x=> x.isDisabled!=true );\n        console.log(\"Active Shopowners\",this.activeShopowner);\n        loading.dismiss();\n      },\n      err => {\n        console.log(err);\n        loading.dismiss();\n      });\n  }\n  async GetAllUser() {\n    const loading = await this.loadingController.create({\n      message: 'Loading'\n    });\n\n    await loading.present();\n    await this.api.GetAllUser().subscribe(\n      res => {\n        console.log(res,\"Riders\");\n        this.users = res;\n        console.log(this.users);\n        // this.disabledShopOwner     = this.shopowner.filter(x=> x.isDisabled==true);\n        // console.log(\"Disabled Shopowners\", this.disabledShopOwner );\n        // this.activeShopowner= this.shopowner.filter(x=> x.isDisabled!=true );\n        // console.log(\"Active Shopowners\",this.activeShopowner);\n        loading.dismiss();\n      },\n      err => {\n        console.log(err);\n        loading.dismiss();\n      }\n    );\n  }\n\n  doRefresh(event) {\n    this.ngOnInit();\n    setTimeout(() => {\n      event.target.complete();\n    }, 1000);\n  }\n   segmentChanged(ev: any) {  \n  }\n async UpdateUserStatus(id){\n  const loading = await this.loadingController.create({ message: 'Loading' });\n  await loading.present();\n\n  await this.api.UpdateUserStatus(id).subscribe(\n    res => {\n      console.log(res);\n      this.toastServices.create('Changed successfully');\n      this.doRefresh(event);\n      loading.dismiss();\n    },\n    err => {\n      console.log(err);\n      loading.dismiss();\n    }\n  );\n\n }\n\n}\n"]}