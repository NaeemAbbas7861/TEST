{"version":3,"sources":["webpack:///src/app/shopOwner/shop/edit/editshop.page.html","webpack:///src/app/services/shop.service.ts","webpack:///src/app/shopOwner/shop/edit/editshop.module.ts","webpack:///src/app/shopOwner/shop/edit/editshop.page.scss","webpack:///src/app/shopOwner/shop/edit/editshop.page.ts"],"names":["ShopService","http","authenticationState","API_SHOP","BASE_URL","API_PRODUCT","API_BANK","lat","lng","url","get","httpOptions","pipe","extractData","handleError","groupid","id","data","put","post","providedIn","EditShopPageModule","imports","forChild","path","component","declarations","providers","entryComponents","EditShopPage","router","route","shopservice","groupservice","loadingController","toastService","formBuilder","geolocation","fileChooser","file","filePath","transfer","ref","zone","uploadinglogo","uploadingbanner","resourceURL","RESOURCE_URL","snapshot","paramMap","validation_messages","Name","type","message","lastName","NDN_Number","mobileNumber","Address","Type","AccountType","Radious","AccountNumber","BankName","GoogleAutocomplete","google","maps","places","AutocompleteService","autocomplete","input","autocompleteItems","getPlacePredictions","predictions","status","console","log","run","forEach","prediction","push","item","myMarker","setMap","geocoder1","Geocoder","geocode","place_id","results","Marker","position","geometry","location","map","draggable","setCenter","selectedPlace","formatted_address","fg","controls","setValue","event","addListener","latitude","getPosition","longitude","getAddressFromMarker","group","required","pattern","compose","min","getGroups","GetBankList","getShop","e","preventDefault","value","target","lt","lg","create","loading","present","GetGroups","subscribe","res","dismiss","groups","Message","err","Map","mapElement","nativeElement","center","zoom","markLat","markLong","formGroup","latlng","LatLng","geocoder","GeocoderStatus","OK","strAddress","GroupId","Latitude","Longitude","obj","trim","length","updateValueAndValidity","price","DeliveryRadius","Logo","UpdateShop","navigate","GetBank","banklist","GetShop","name","groupId","userId","contact","deliveryRadius","ndN_Number","address","accountType","bankName","accountNumber","isDisabled","isVerified","logo","loadMap","open","then","uri","resolveNativePath","resolveLocalFilesystemUrl","fileInfo","files","success","size","filesName","options","fileName","fileTransfer","upload","dbpath","JSON","parse","response","dbPath","detectChanges","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAaA,WAAW;AAAA;;AAAA;;AAMtB,2BACYC,IADZ,EAC4B;AAAA;;AAAA;;AACxB,kCAAMA,IAAN;AADQ,cAAAA,IAAA,GAAAA,IAAA;AALJ,cAAAC,mBAAA,GAAsB,IAAI,oDAAJ,CAAoB,KAApB,CAAtB;AACS,cAAAC,QAAA,aAAc,yEAAYC,QAA1B;AACA,cAAAC,WAAA,aAAiB,yEAAYD,QAA7B;AACA,cAAAE,QAAA,aAAc,yEAAYF,QAA1B;AAEW;AACV;;AARI;AAAA;AAAA,eAWtB,kBAASG,GAAT,EAAaC,GAAb,EAAgB;AACd,cAAMC,GAAG,aAAM,KAAKN,QAAX,SAAsBI,GAAtB,cAA6BC,GAA7B,CAAT;AACA,iBAAO,KAAKP,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AAfqB;AAAA;AAAA,eAiBtB,4BAAmBC,OAAnB,EAA2BR,GAA3B,EAA+BC,GAA/B,EAAkC;AAChC,cAAMC,GAAG,aAAM,KAAKN,QAAX,SAAsBI,GAAtB,cAA6BC,GAA7B,cAAoCO,OAApC,CAAT;AACA,iBAAO,KAAKd,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AArBqB;AAAA;AAAA,eAsBtB,+BAAmB;AACjB,cAAML,GAAG,aAAM,KAAKN,QAAX,CAAT;AACA,iBAAO,KAAKF,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AA1BqB;AAAA;AAAA,eA4BtB,4BAAgB;AACd,cAAML,GAAG,aAAM,KAAKN,QAAX,aAAT;AACA,iBAAO,KAAKF,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AAhCqB;AAAA;AAAA,eAkCtB,8BAAkB;AAChB,cAAML,GAAG,aAAM,KAAKN,QAAX,cAAT;AACA,iBAAO,KAAKF,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AAtCqB;AAAA;AAAA,eAwCtB,wBAAeE,EAAf,EAAiB;AACf,cAAMP,GAAG,aAAM,KAAKN,QAAX,kBAA2Ba,EAA3B,CAAT;AACA,iBAAO,KAAKf,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AA5CqB;AAAA;AAAA,eA8CtB,qBAAYE,EAAZ,EAAiBC,IAAjB,EAAqB;AACnB,cAAMR,GAAG,aAAM,KAAKN,QAAX,SAAsBa,EAAtB,CAAT;AACA,iBAAO,KAAKf,IAAL,CAAUiB,GAAV,CAAcT,GAAd,EAAmBQ,IAAnB,EAAyB,KAAKN,WAA9B,EACNC,IADM,CACD,kEAAW,KAAKE,WAAhB,CADC,CAAP;AAED;AAlDqB;AAAA;AAAA,eAoDtB,oBAAWE,EAAX,EAAgBC,IAAhB,EAAoB;AAClB,cAAMR,GAAG,aAAM,KAAKN,QAAX,SAAsBa,EAAtB,CAAT;AACA,iBAAO,KAAKf,IAAL,CAAUiB,GAAV,CAAcT,GAAd,EAAmBQ,IAAnB,EAAyB,KAAKN,WAA9B,EACNC,IADM,CACD,kEAAW,KAAKE,WAAhB,CADC,CAAP;AAED;AAxDqB;AAAA;AAAA,eA0DtB,uBAAcE,EAAd,EAAmBC,IAAnB,EAAuB;AACrB,cAAMR,GAAG,aAAM,KAAKJ,WAAX,SAAyBW,EAAzB,CAAT;AACA,iBAAO,KAAKf,IAAL,CAAUiB,GAAV,CAAcT,GAAd,EAAmBQ,IAAnB,EAAyB,KAAKN,WAA9B,EACNC,IADM,CACD,kEAAW,KAAKE,WAAhB,CADC,CAAP;AAED;AA9DqB;AAAA;AAAA,eAgEtB,yBAAgBE,EAAhB,EAAkB;AAChB,cAAMP,GAAG,aAAM,KAAKN,QAAX,SAAsBa,EAAtB,cAAT;AACA,iBAAO,KAAKf,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AApEqB;AAAA;AAAA,eAsEtB,2BAAkBE,EAAlB,EAAoB;AAClB,cAAMP,GAAG,aAAM,KAAKN,QAAX,sBAA+Ba,EAA/B,CAAT;AACA,iBAAO,KAAKf,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AA1EqB;AAAA;AAAA,eA2EtB,+BAAsBE,EAAtB,EAAwB;AACtB,cAAMP,GAAG,aAAM,KAAKJ,WAAX,yBAAqCW,EAArC,CAAT;AACA,iBAAO,KAAKf,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AA/EqB;AAAA;AAAA,eAkFtB,iBAAQE,EAAR,EAAU;AACR,cAAMP,GAAG,aAAM,KAAKN,QAAX,SAAsBa,EAAtB,CAAT;AACA,iBAAO,KAAKf,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AAtFqB;AAAA;AAAA,eA0FtB,0BAAiBE,EAAjB,EAAmB;AACjB,cAAMP,GAAG,aAAM,KAAKJ,WAAX,SAAyBW,EAAzB,CAAT;AACA,iBAAO,KAAKf,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAmB,KAAKE,WAAxB,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AA9FqB;AAAA;AAAA,eAgGtB,kBAASG,IAAT,EAAa;AACX,cAAMR,GAAG,aAAM,KAAKN,QAAX,CAAT;AACA,iBAAO,KAAKF,IAAL,CAAUkB,IAAV,CAAeV,GAAf,EAAoBQ,IAApB,EAA0B,KAAKN,WAA/B,EACNC,IADM,CACD,kEAAW,KAAKE,WAAhB,CADC,CAAP;AAED;AApGqB;AAAA;AAAA,eAsGtB,qBAAYG,IAAZ,EAAgB;AACd,cAAMR,GAAG,aAAM,KAAKJ,WAAX,CAAT;AACA,iBAAO,KAAKJ,IAAL,CAAUkB,IAAV,CAAeV,GAAf,EAAoBQ,IAApB,EAA0B,KAAKN,WAA/B,EACNC,IADM,CACD,kEAAW,KAAKE,WAAhB,CADC,CAAP;AAED;AA1GqB;AAAA;AAAA,eA2GtB,sBAAU;AACR,cAAML,GAAG,aAAM,KAAKJ,WAAX,CAAT;AACA,iBAAO,KAAKJ,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAoB,KAAKE,WAAzB,EACNC,IADM,CACD,kEAAW,KAAKE,WAAhB,CADC,CAAP;AAED;AA/GqB;AAAA;AAAA,eAgHtB,2BAAkBE,EAAlB,EAAoB;AAClB,cAAMP,GAAG,aAAK,KAAKJ,WAAV,SAAwBW,EAAxB,CAAT;AACA,iBAAO,KAAKf,IAAL,WAAiBQ,GAAjB,EAAuB,KAAKE,WAA5B,EACNC,IADM,CACD,2DAAI,KAAKC,WAAT,CADC,EACsB,kEAAW,KAAKC,WAAhB,CADtB,CAAP;AAED;AApHqB;AAAA;AAAA,eAsHtB,oBAAWE,EAAX,EAAa;AACX,cAAMP,GAAG,aAAK,KAAKN,QAAV,SAAqBa,EAArB,CAAT;AACA,iBAAO,KAAKf,IAAL,WAAiBQ,GAAjB,EAAuB,KAAKE,WAA5B,EACNC,IADM,CACD,kEAAW,KAAKE,WAAhB,CADC,CAAP;AAED;AA1HqB;AAAA;AAAA,eA4HtB,mBAAO;AACL,cAAML,GAAG,aAAM,KAAKH,QAAX,CAAT;AACA,iBAAO,KAAKL,IAAL,CAAUS,GAAV,CAAcD,GAAd,EAAoB,KAAKE,WAAzB,EACNC,IADM,CACD,kEAAW,KAAKE,WAAhB,CADC,CAAP;AAED;AAhIqB;;AAAA;AAAA,MAAS,yDAAT,CAAxB;;;;cAOoB;;;;AAPPd,eAAW,6DAHvB,iEAAW;AACVoB,gBAAU,EAAE;AADF,KAAX,CAGuB,GAAXpB,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVb;;;;;;;;;;;AAsCA,QAAaqB,kBAAkB;AAAA;AAAA,KAA/B;;AAAaA,sBAAkB,6DAjB9B,+DAAS;AACRC,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,6DAAaC,QAAb,CAAsB,CACpB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADoB,CAAtB,CALO,CADD;AAaRC,kBAAY,EAAE,CAAC,2DAAD,CAbN;AAcRC,eAAS,EAAC,CAAC,yEAAD,EAAe,0EAAf,EAA6B,2DAA7B,EAAmC,qEAAnC,EAA6C,6EAA7C,CAdF;AAeRC,qBAAe,EAAE;AAfT,KAAT,CAiB8B,GAAlBP,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACtCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAf;;;;;;;;;;;AAiCA,QAAaQ,YAAY;AA6BvB,4BACUC,MADV,EAEUC,KAFV,EAGUC,WAHV,EAIUC,YAJV,EAKSC,iBALT,EAMUC,YANV,EAOUC,WAPV,EAQUnC,IARV,EASUoC,WATV,EAUUC,WAVV,EAWUC,IAXV,EAYUC,QAZV,EAaUC,QAbV,EAcUC,GAdV,EAeSC,IAfT,EAeuB;AAAA;;AAdb,aAAAb,MAAA,GAAAA,MAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACD,aAAAC,iBAAA,GAAAA,iBAAA;AACC,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAnC,IAAA,GAAAA,IAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,GAAA,GAAAA,GAAA;AACD,aAAAC,IAAA,GAAAA,IAAA;AAjCT,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAAC,eAAA,GAAkB,KAAlB;AACA,aAAAC,WAAA,GAAc,yEAAYC,YAA1B;AACA,aAAA/B,EAAA,GAAK,KAAKe,KAAL,CAAWiB,QAAX,CAAoBC,QAApB,CAA6BvC,GAA7B,CAAiC,IAAjC,CAAL;AA8bA,aAAAwC,mBAAA,GAAsB;AAEpBC,cAAI,EAAE,CAAC;AAAEC,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WAAD,CAFc;AAIpBC,kBAAQ,EAAE,CAAC;AAAEF,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WAAD,CAJU;AAKpBE,oBAAU,EAAE,CACV;AAAEH,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADU,EAEV;AAAED,gBAAI,EAAE,SAAR;AAAmBC,mBAAO,EAAE;AAA5B,WAFU,CALQ;AASpBG,sBAAY,EAAE,CACZ;AAAEJ,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADY,EAEZ;AAAED,gBAAI,EAAE,SAAR;AAAmBC,mBAAO,EAAE;AAA5B,WAFY,CATM;AAapBI,iBAAO,EAAE,CACP;AAAEL,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADO,CAbW;AAgBpBK,cAAI,EAAE,CACJ;AAAEN,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADI,CAhBc;AAmBpBM,qBAAW,EAAE,CACX;AAAEP,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADW,CAnBO;AAsBpBO,iBAAO,EAAE,CACP;AAAER,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADO,EAEP;AAAED,gBAAI,EAAE,KAAR;AAAeC,mBAAO,EAAE;AAAxB,WAFO,CAtBW;AA0BpBQ,uBAAa,EAAE,CACb;AAAET,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADa,CA1BK;AA6BpBS,kBAAQ,EAAE,CACR;AAAEV,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADQ;AA7BU,SAAtB;AA9ZE,aAAKU,kBAAL,GAA0B,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,mBAAvB,EAA1B;AACA,aAAKC,YAAL,GAAoB;AAAEC,eAAK,EAAE;AAAT,SAApB;AACA,aAAKC,iBAAL,GAAyB,EAAzB;AACD;;AAjDsB;AAAA;AAAA,eAmDvB,+BAAsB;AAAA;;AACpB,cAAI,KAAKF,YAAL,CAAkBC,KAAlB,IAA2B,EAA/B,EAAmC;AACjC,iBAAKC,iBAAL,GAAyB,EAAzB;AACA;AACD;;AACD,eAAKP,kBAAL,CAAwBQ,mBAAxB,CAA4C;AAAEF,iBAAK,EAAE,KAAKD,YAAL,CAAkBC;AAA3B,WAA5C,EACE,UAACG,WAAD,EAAcC,MAAd,EAAyB;AACvBC,mBAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,kBAAI,CAACH,iBAAL,GAAyB,EAAzB;;AACA,kBAAI,CAAC3B,IAAL,CAAUiC,GAAV,CAAc,YAAM;AAClBJ,yBAAW,CAACK,OAAZ,CAAoB,UAACC,UAAD,EAAgB;AAClC,sBAAI,CAACR,iBAAL,CAAuBS,IAAvB,CAA4BD,UAA5B;AACD,eAFD;AAGD,aAJD;AAKD,WATH;AAUD;AAlEsB;AAAA;AAAA,eAoEvB,4BAAmBE,IAAnB,EAAyB;AAAA;;AAEvB,eAAKC,QAAL,CAAcC,MAAd,CAAqB,IAArB;AACA,eAAKZ,iBAAL,GAAyB,EAAzB;AACA,cAAIa,SAAS,GAAG,IAAInB,MAAM,CAACC,IAAP,CAAYmB,QAAhB,EAAhB;AAEAD,mBAAS,CAACE,OAAV,CAAkB;AAAE,uBAAWL,IAAI,CAACM;AAAlB,WAAlB,EAAgD,UAACC,OAAD,EAAUd,MAAV,EAAqB;AACnE,gBAAIA,MAAM,KAAK,IAAX,IAAmBc,OAAO,CAAC,CAAD,CAA9B,EAAmC;AACjC,oBAAI,CAACN,QAAL,GAAgB,IAAIjB,MAAM,CAACC,IAAP,CAAYuB,MAAhB,CAAuB;AACrCC,wBAAQ,EAAEF,OAAO,CAAC,CAAD,CAAP,CAAWG,QAAX,CAAoBC,QADO;AAErCC,mBAAG,EAAE,MAAI,CAACA,GAF2B;AAGrCC,yBAAS,EAAE;AAH0B,eAAvB,CAAhB;;AAMA,oBAAI,CAACD,GAAL,CAASE,SAAT,CAAmB,MAAI,CAACb,QAAL,CAAcQ,QAAjC;;AACA,oBAAI,CAACR,QAAL,CAAcC,MAAd,CAAqB,MAAI,CAACU,GAA1B;;AACA,oBAAI,CAACG,aAAL,GAAqB,KAAKR,OAAO,CAAC,CAAD,CAAP,CAAWS,iBAArC;;AACA,oBAAI,CAACC,EAAL,CAAQC,QAAR,CAAiBzC,OAAjB,CAAyB0C,QAAzB,CAAkC,KAAKZ,OAAO,CAAC,CAAD,CAAP,CAAWS,iBAAlD;;AAEAhC,oBAAM,CAACC,IAAP,CAAYmC,KAAZ,CAAkBC,WAAlB,CAA8B,MAAI,CAACpB,QAAnC,EAA6C,SAA7C,EAAwD,YAAM;AAC5D,sBAAI,CAACqB,QAAL,GAAgB,MAAI,CAACrB,QAAL,CAAcsB,WAAd,GAA4BhG,GAA5B,EAAhB;AACA,sBAAI,CAACiG,SAAL,GAAiB,MAAI,CAACvB,QAAL,CAAcsB,WAAd,GAA4B/F,GAA5B,EAAjB;;AACA,sBAAI,CAACiG,oBAAL,CAA0B,MAAI,CAACH,QAA/B,EAAyC,MAAI,CAACE,SAA9C,EAAyD,MAAI,CAACP,EAA9D;AACD,eAJD;AAKD;AACF,WAnBD;AAoBD;AA9FsB;AAAA;AAAA,eA+FvB,oBAAW;AACT,eAAKA,EAAL,GAAU,KAAK7D,WAAL,CAAiBsE,KAAjB,CAAuB;AAC/B,kBAAM,CAAC,IAAD,CADyB;AAE/B,oBAAQ,CAAC,IAAD,EAAO,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,0CAAnB,CAAtB,CAAP,CAFuB;AAG/B,uBAAW,CAAC,IAAD,CAHoB;AAI/B,sBAAU,CAAC,IAAD,CAJqB;AAK/B,uBAAW,CAAC,IAAD,EAAO,0DAAWC,OAAX,CAAmB,CACnC,0DAAWF,QADwB,EAEnC,0DAAWC,OAAX,CAAmB,iBAAnB,CAFmC,CAAnB,CAAP,CALoB;AAS/B,0BAAc,CAAC,IAAD,EAAO,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,YAAnB,CAAtB,CAAP,CATiB;AAU/B,2BAAe,CAAC,IAAD,EAAO,0DAAWD,QAAlB,CAVgB;AAW/B,wBAAY,CAAC,IAAD,CAXmB;AAY/B,6BAAiB,CAAC,IAAD,EAAO,0DAAWA,QAAlB,CAZc;AAa/B,wBAAY,CAAC,IAAD,CAbmB;AAc/B,yBAAa,CAAC,IAAD,CAdkB;AAe/B,8BAAkB,CAAC,IAAD,EAAO,0DAAWE,OAAX,CAAmB,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWG,GAAX,CAAe,EAAf,CAAtB,CAAnB,CAAP,CAfa;AAgB/B,uBAAW,CAAC,IAAD,EAAO,0DAAWH,QAAlB,CAhBoB;AAiB/B,4BAAgB,CAAC,IAAD,CAjBe;AAkB/B,0BAAc,CAAC,KAAD,CAlBiB;AAmB/B,0BAAc,CAAC,KAAD,CAnBiB;AAoB/B,oBAAQ,CAAC,IAAD,EAAO,0DAAWA,QAAlB;AApBuB,WAAvB,CAAV;AAyBD;AAzHsB;AAAA;AAAA,eA4HjB,2BAAkB;;;;;;;AACtB,2BAAM,KAAKI,SAAL,EAAN;;;;AACA,2BAAM,KAAKC,WAAL,EAAN;;;;AACA,2BAAM,KAAKC,OAAL,CAAa,KAAKjG,EAAlB,CAAN;;;;;;;;;AAKD;AApIsB;AAAA;AAAA,eAsIvB,wBAAekG,CAAf,EAAkB;AAChBA,WAAC,CAACC,cAAF;AACD;AAxIsB;AAAA;AAAA,eAyIvB,+BAAsBf,KAAtB,EAA6B;AAC3B,eAAKH,EAAL,CAAQmB,KAAR,CAAczD,WAAd,GAA4ByC,KAAK,CAACiB,MAAN,CAAaD,KAAzC;AACA,eAAKnB,EAAL,CAAQC,QAAR,CAAiB,aAAjB,EAAgCC,QAAhC,CAAyCC,KAAK,CAACiB,MAAN,CAAaD,KAAtD,EAF2B,CAG3B;AACA;AACA;AACA;AACA;;AACA1C,iBAAO,CAACC,GAAR,CAAYyB,KAAK,CAACiB,MAAN,CAAaD,KAAzB;AACD;AAlJsB;AAAA;AAAA,eAoJvB,oBAAWhB,KAAX,EAAkB;AAChB,eAAKH,EAAL,CAAQC,QAAR,CAAiB,UAAjB,EAA6BC,QAA7B,CAAsCC,KAAK,CAACiB,MAAN,CAAaD,KAAnD;AACA1C,iBAAO,CAACC,GAAR,CAAYyB,KAAK,CAACiB,MAAN,CAAaD,KAAzB;AAED;AAxJsB;AAAA;AAAA,eA0JvB,sBAAaE,EAAb,EAAiBC,EAAjB,EAAqB;AACnB,eAAKjB,QAAL,GAAgBgB,EAAhB;AACA,eAAKd,SAAL,GAAiBe,EAAjB;AACD;AA7JsB;AAAA;AAAA,eA8JjB,qBAAY;;;;;;;;;;AACA,2BAAM,KAAKrF,iBAAL,CAAuBsF,MAAvB,CAA8B;AAAEnE,6BAAO,EAAE;AAAX,qBAA9B,CAAN;;;AAAVoE,2B;;AACN,2BAAMA,OAAO,CAACC,OAAR,EAAN;;;;AACA,2BAAM,KAAKzF,YAAL,CAAkB0F,SAAlB,GAA8BC,SAA9B,CACJ,UAAAC,GAAG,EAAI;AACLJ,6BAAO,CAACK,OAAR;;AACA,0BAAID,GAAJ,EAAS;AACPnD,+BAAO,CAACC,GAAR,CAAYkD,GAAZ;AACA,8BAAI,CAACE,MAAL,GAAcF,GAAd;AACD,uBAHD,MAGO;AACLJ,+BAAO,CAACK,OAAR;;AACA,8BAAI,CAAC3F,YAAL,CAAkBqF,MAAlB,CAAyBK,GAAG,CAACG,OAA7B,EAAsC,QAAtC;AACD;AACF,qBAVG,EAWJ,UAAAC,GAAG,EAAI;AACLR,6BAAO,CAACK,OAAR;;AACA,4BAAI,CAAC3F,YAAL,CAAkBqF,MAAlB,CAAyBS,GAAzB,EAA8B,QAA9B;AACD,qBAdG,CAAN;;;;;;;;;AAgBD;AAjLsB;AAAA;AAAA,eAkLjB,mBAAU;;;;;;;;AACd,yBAAKrC,GAAL,GAAW,IAAI5B,MAAM,CAACC,IAAP,CAAYiE,GAAhB,CAAoB,KAAKC,UAAL,CAAgBC,aAApC,EAAmD;AAC5DC,4BAAM,EAAE;AAAE9H,2BAAG,EAAE,KAAK+F,QAAZ;AAAsB9F,2BAAG,EAAE,KAAKgG;AAAhC,uBADoD;AAE5D8B,0BAAI,EAAE;AAFsD,qBAAnD,CAAX;AAKA,yBAAKrD,QAAL,GAAgB,IAAIjB,MAAM,CAACC,IAAP,CAAYuB,MAAhB,CAAuB;AACrCC,8BAAQ,EAAE;AAAElF,2BAAG,EAAE,KAAK+F,QAAZ;AAAsB9F,2BAAG,EAAE,KAAKgG;AAAhC,uBAD2B;AAErCX,+BAAS,EAAE;AAF0B,qBAAvB,CAAhB;AAIA,yBAAKD,GAAL,CAASE,SAAT,CAAmB,KAAKb,QAAL,CAAcQ,QAAjC;AACA,yBAAKR,QAAL,CAAcC,MAAd,CAAqB,KAAKU,GAA1B;AAEA5B,0BAAM,CAACC,IAAP,CAAYmC,KAAZ,CAAkBC,WAAlB,CAA8B,KAAKpB,QAAnC,EAA6C,SAA7C,EAAwD,YAAM;AAC5D,4BAAI,CAACqB,QAAL,GAAgB,MAAI,CAACrB,QAAL,CAAcsB,WAAd,GAA4BhG,GAA5B,EAAhB;AACA,4BAAI,CAACiG,SAAL,GAAiB,MAAI,CAACvB,QAAL,CAAcsB,WAAd,GAA4B/F,GAA5B,EAAjB;;AAEA,4BAAI,CAACiG,oBAAL,CAA0B,MAAI,CAACH,QAA/B,EAAyC,MAAI,CAACE,SAA9C,EAAyD,MAAI,CAACP,EAA9D;AAGD,qBAPD;;;;;;;;;AAQD;AAvMsB;AAAA;AAAA,eA0MvB,8BAAqBsC,OAArB,EAAmCC,QAAnC,EAAkDC,SAAlD,EAAwE;AACtE,cAAIC,MAAM,GAAG,IAAI1E,MAAM,CAACC,IAAP,CAAY0E,MAAhB,CAAuBJ,OAAvB,EAAgCC,QAAhC,CAAb;AACA,cAAII,QAAQ,GAAG,IAAI5E,MAAM,CAACC,IAAP,CAAYmB,QAAhB,EAAf;AACAwD,kBAAQ,CAACvD,OAAT,CAAiB;AAAE,sBAAUqD;AAAZ,WAAjB,EAAuC,UAAUnD,OAAV,EAAmBd,MAAnB,EAA2B;AAChE,gBAAIA,MAAM,IAAIT,MAAM,CAACC,IAAP,CAAY4E,cAAZ,CAA2BC,EAAzC,EAA6C;AAC3C,kBAAIvD,OAAO,CAAC,CAAD,CAAX,EAAgB;AACd,qBAAKwD,UAAL,GAAkB,EAAlB;AACA,qBAAKA,UAAL,GAAkB,KAAKA,UAAL,GAAkBxD,OAAO,CAAC,CAAD,CAAP,CAAWS,iBAA/C;AACAyC,yBAAS,CAACvC,QAAV,CAAmBzC,OAAnB,CAA2B0C,QAA3B,CAAoC,KAAK,KAAK4C,UAA9C;AACD;AACF;AACF,WARD;AASD;AAtNsB;AAAA;AAAA,eAyNjB,sBAAa;;;;;;;;;;AACjB;AACA,yBAAK9C,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BC,QAA5B,CAAqC,KAAK6C,OAA1C;AACA,yBAAK/C,EAAL,CAAQmB,KAAR,CAAc6B,QAAd,GAAyB,KAAK3C,QAA9B;AACA,yBAAKL,EAAL,CAAQmB,KAAR,CAAc8B,SAAd,GAA0B,KAAK1C,SAA/B;;AACgB,2BAAM,KAAKtE,iBAAL,CAAuBsF,MAAvB,CAA8B;AAAEnE,6BAAO,EAAE;AAAX,qBAA9B,CAAN;;;AAAVoE,2B;AACN;AACI0B,uB,GAAM,KAAKlD,EAAL,CAAQmB,K;AAClB+B,uBAAG,CAAChG,IAAJ,GAAWgG,GAAG,CAAChG,IAAJ,CAASiG,IAAT,EAAX;AACAD,uBAAG,CAAC1F,OAAJ,GAAc0F,GAAG,CAAC1F,OAAJ,CAAY2F,IAAZ,EAAd;AACAD,uBAAG,CAACtF,aAAJ,GAAoBsF,GAAG,CAACtF,aAAJ,CAAkBuF,IAAlB,EAApB;;0BACID,GAAG,CAAChG,IAAJ,CAASkG,MAAT,IAAmB,CAAnB,IAAwBF,GAAG,CAAC1F,OAAJ,IAAe,CAAvC,IAA4C0F,GAAG,CAACtF,aAAJ,IAAqB,C;;;;;AACnE,yBAAKoC,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBC,QAAzB,CAAkC,IAAlC;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBoD,sBAAzB;AACA,yBAAKrD,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BC,QAA5B,CAAqC,IAArC;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BoD,sBAA5B;AACA,yBAAKrD,EAAL,CAAQC,QAAR,CAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,IAA3C;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,eAAjB,EAAkCoD,sBAAlC;;;;;0BAEOH,GAAG,CAAChG,IAAJ,CAASkG,MAAT,IAAmB,CAAnB,IAAwBF,GAAG,CAAC1F,OAAJ,IAAe,C;;;;;AAC9C,yBAAKwC,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBC,QAAzB,CAAkC,IAAlC;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBoD,sBAAzB;AACA,yBAAKrD,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BC,QAA5B,CAAqC,IAArC;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BoD,sBAA5B;;;;;0BAEOH,GAAG,CAAChG,IAAJ,CAASkG,MAAT,IAAmB,CAAnB,IAAwBF,GAAG,CAACtF,aAAJ,IAAqB,C;;;;;AACpD,yBAAKoC,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBC,QAAzB,CAAkC,IAAlC;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBoD,sBAAzB;AACA,yBAAKrD,EAAL,CAAQC,QAAR,CAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,IAA3C;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,eAAjB,EAAkCoD,sBAAlC;;;;;0BAEOH,GAAG,CAAC1F,OAAJ,IAAe,CAAf,IAAoB0F,GAAG,CAACtF,aAAJ,IAAqB,C;;;;;AAChD,yBAAKoC,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BC,QAA5B,CAAqC,IAArC;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BoD,sBAA5B;AACA,yBAAKrD,EAAL,CAAQC,QAAR,CAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,IAA3C;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,eAAjB,EAAkCoD,sBAAlC;;;;;0BAEOH,GAAG,CAAChG,IAAJ,CAASkG,MAAT,IAAmB,C;;;;;AAC1B,yBAAKpD,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBC,QAAzB,CAAkC,IAAlC;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBoD,sBAAzB;;;;;0BAEOH,GAAG,CAAC1F,OAAJ,IAAe,C;;;;;AACtB,yBAAKwC,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BC,QAA5B,CAAqC,IAArC;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BoD,sBAA5B;;;;;0BAEOH,GAAG,CAACtF,aAAJ,IAAqB,C;;;;;AAC5B,yBAAKoC,EAAL,CAAQC,QAAR,CAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,IAA3C;AACA,yBAAKF,EAAL,CAAQC,QAAR,CAAiB,eAAjB,EAAkCoD,sBAAlC;;;;;0BAEO,KAAKrD,EAAL,CAAQmB,KAAR,CAAcmC,KAAd,GAAsB,C;;;;;AAC7B,yBAAKpH,YAAL,CAAkBqF,MAAlB,CAAyB,iCAAzB,EAA4D,QAA5D;;;;;0BAEO,KAAKvB,EAAL,CAAQmB,KAAR,CAAcoC,cAAd,GAA+B,E;;;;;AACtC,yBAAKrH,YAAL,CAAkBqF,MAAlB,CAAyB,gCAAzB,EAA2D,QAA3D;sDACO,K;;;0BAEA,KAAKvB,EAAL,CAAQmB,KAAR,CAAcqC,IAAd,IAAsB,I;;;;;AAC7B,yBAAKtH,YAAL,CAAkBqF,MAAlB,CAAyB,8BAAzB,EAAyD,QAAzD;;;;;;AAGgB,2BAAM,KAAKtF,iBAAL,CAAuBsF,MAAvB,CAA8B;AAAEnE,6BAAO,EAAE;AAAX,qBAA9B,CAAN;;;AAAVoE,4B;;AACN,2BAAMA,QAAO,CAACC,OAAR,EAAN;;;;AACA,2BAAM,KAAK1F,WAAL,CAAiB0H,UAAjB,CAA4B,KAAK1I,EAAjC,EAAqC,KAAKiF,EAAL,CAAQmB,KAA7C,EAAoDQ,SAApD,CACJ,UAAAC,GAAG,EAAI;AACLnD,6BAAO,CAACC,GAAR,CAAYkD,GAAZ,EAAiB,MAAjB;;AACAJ,8BAAO,CAACK,OAAR;;AACA,4BAAI,CAAC3F,YAAL,CAAkBqF,MAAlB,CAAyB,sBAAzB,EAAiD,SAAjD;;AACA,4BAAI,CAAC1F,MAAL,CAAY6H,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AAED,qBAPG,EAQJ,UAAA1B,GAAG,EAAI;AACLR,8BAAO,CAACK,OAAR;;AACA,4BAAI,CAAC3F,YAAL,CAAkBqF,MAAlB,CAAyBS,GAAzB,EAA8B,QAA9B;AACD,qBAXG,CAAN;;;;;;;;;AAcH;AArSsB;AAAA;AAAA,eAsSjB,uBAAc;;;;;;;;;;AACF,2BAAM,KAAK/F,iBAAL,CAAuBsF,MAAvB,CAA8B;AAAEnE,6BAAO,EAAE;AAAX,qBAA9B,CAAN;;;AAAVoE,2B;;AACN,2BAAMA,OAAO,CAACC,OAAR,EAAN;;;;AACA,2BAAM,KAAK1F,WAAL,CAAiB4H,OAAjB,GAA2BhC,SAA3B,CACJ,UAAAC,GAAG,EAAI;AACLJ,6BAAO,CAACK,OAAR;;AACA,0BAAID,GAAJ,EAAS;AACPnD,+BAAO,CAACC,GAAR,CAAYkD,GAAZ;AACA,8BAAI,CAACgC,QAAL,GAAgBhC,GAAhB;AACD,uBAHD,MAGO;AACLJ,+BAAO,CAACK,OAAR;;AACA,8BAAI,CAAC3F,YAAL,CAAkBqF,MAAlB,CAAyBK,GAAG,CAACG,OAA7B,EAAsC,QAAtC;AACD;AACF,qBAVG,EAWJ,UAAAC,GAAG,EAAI;AACLR,6BAAO,CAACK,OAAR;;AACA,4BAAI,CAAC3F,YAAL,CAAkBqF,MAAlB,CAAyBS,GAAzB,EAA8B,QAA9B;AACD,qBAdG,CAAN;;;;;;;;;AAgBD;AAzTsB;AAAA;AAAA,eA2TjB,iBAAQjH,EAAR,EAAY;;;;;;;;;;AACA,2BAAM,KAAKkB,iBAAL,CAAuBsF,MAAvB,CAA8B;AAAEnE,6BAAO,EAAE;AAAX,qBAA9B,CAAN;;;AAAVoE,2B;;AACN,2BAAMA,OAAO,CAACC,OAAR,EAAN;;;;AACA,2BAAM,KAAK1F,WAAL,CAAiB8H,OAAjB,CAAyB9I,EAAzB,EAA6B4G,SAA7B,CACJ,UAAAC,GAAG,EAAI;AACLJ,6BAAO,CAACK,OAAR;;AACA,0BAAID,GAAJ,EAAS;AACP;AACA,8BAAI,CAACvB,QAAL,GAAgBuB,GAAG,CAACvB,QAApB;AACA,8BAAI,CAACE,SAAL,GAAiBqB,GAAG,CAACrB,SAArB;;AACA,8BAAI,CAACP,EAAL,CAAQC,QAAR,CAAiB,IAAjB,EAAuBC,QAAvB,CAAgC0B,GAAG,CAAC7G,EAApC;;AACA,8BAAI,CAACiF,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBC,QAAzB,CAAkC0B,GAAG,CAACkC,IAAtC,EALO,CAMP;AACA;;;AACA,8BAAI,CAACf,OAAL,GAAgBnB,GAAG,CAACmC,OAApB;;AACA,8BAAI,CAAC/D,EAAL,CAAQC,QAAR,CAAiB,QAAjB,EAA2BC,QAA3B,CAAoC0B,GAAG,CAACoC,MAAxC;;AACA,8BAAI,CAAChE,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BC,QAA5B,CAAqC0B,GAAG,CAACqC,OAAzC;;AACA,8BAAI,CAACjE,EAAL,CAAQC,QAAR,CAAiB,UAAjB,EAA6BC,QAA7B,CAAsC0B,GAAG,CAACvB,QAA1C;;AACA,8BAAI,CAACL,EAAL,CAAQC,QAAR,CAAiB,WAAjB,EAA8BC,QAA9B,CAAuC0B,GAAG,CAACrB,SAA3C;;AACA,8BAAI,CAACP,EAAL,CAAQC,QAAR,CAAiB,gBAAjB,EAAmCC,QAAnC,CAA4C0B,GAAG,CAACsC,cAAhD;;AACA,8BAAI,CAAClE,EAAL,CAAQC,QAAR,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwC0B,GAAG,CAACuC,UAA5C;;AACA,8BAAI,CAACnE,EAAL,CAAQC,QAAR,CAAiB,SAAjB,EAA4BC,QAA5B,CAAqC0B,GAAG,CAACwC,OAAzC;;AACA,8BAAI,CAAC1G,WAAL,GAAoBkE,GAAG,CAACyC,WAAxB;AACA,8BAAI,CAACxG,QAAL,GAAiB+D,GAAG,CAAC0C,QAArB,CAjBO,CAkBP;AACA;;AACA,8BAAI,CAACtE,EAAL,CAAQC,QAAR,CAAiB,eAAjB,EAAkCC,QAAlC,CAA2C0B,GAAG,CAAC2C,aAA/C;;AACA,8BAAI,CAACvE,EAAL,CAAQC,QAAR,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwC0B,GAAG,CAAC4C,UAA5C;;AACA,8BAAI,CAACxE,EAAL,CAAQC,QAAR,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwC0B,GAAG,CAAC6C,UAA5C;;AACA,8BAAI,CAACzE,EAAL,CAAQC,QAAR,CAAiB,MAAjB,EAAyBC,QAAzB,CAAkC0B,GAAG,CAAC8C,IAAtC,EAvBO,CAwBP;;;AACA,8BAAI,CAACC,OAAL,GAzBO,CA0BP;;AACD,uBA3BD,MA2BO;AACLnD,+BAAO,CAACK,OAAR;;AACA,8BAAI,CAAC3F,YAAL,CAAkBqF,MAAlB,CAAyBK,GAAG,CAACG,OAA7B,EAAsC,QAAtC;AACD;AACF,qBAlCG,EAmCJ,UAAAC,GAAG,EAAI;AACLR,6BAAO,CAACK,OAAR;;AACA,4BAAI,CAAC3F,YAAL,CAAkBqF,MAAlB,CAAyBS,GAAzB,EAA8B,QAA9B;AACD,qBAtCG,CAAN;;;;;;;;;AAwCD;AAtWsB;AAAA;AAAA,eAwWvB,qBAAY7E,IAAZ,EAAkB;AAAA;;AAEhB,eAAKd,WAAL,CAAiBuI,IAAjB,GAAwBC,IAAxB,CAA6B,UAAMC,GAAN;AAAA,mBAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxCrG,6BAAO,CAACC,GAAR,CAAYoG,GAAZ;AADwC;AAExC,6BAAM,KAAKvI,QAAL,CAAcwI,iBAAd,CAAgCD,GAAhC,EAAqCD,IAArC,CAA0C,UAAAtI,QAAQ,EAAI;AAC1D;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAIY,IAAI,IAAI,MAAZ,EAAoB;AAClB,iCAAI,CAACR,aAAL,GAAqB,IAArB;;AACA,iCAAI,CAACL,IAAL,CAAU0I,yBAAV,CAAoCzI,QAApC,EAA8CsI,IAA9C,CAAmD,UAAAI,QAAQ,EAAI;AAC7D,gCAAIC,KAAK,GAAGD,QAAZ;AACAC,iCAAK,CAAC5I,IAAN,CAAW,UAAM6I,OAAN;AAAA,qCAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEtBA,OAAO,CAACC,IAAR,GAAe,MAFO;AAAA;AAAA;AAAA;;AAGpBC,iDAHoB,GAGRF,OAAO,CAACrB,IAHA;AAIxBrF,+CAAO,CAACC,GAAR,CAAY2G,SAAZ;AACIC,+CALoB,GAKS;AAC/BC,kDAAQ,EAAEF;AADqB,yCALT;AAQlBG,oDARkB,GAQiB,KAAKhJ,QAAL,CAAc+E,MAAd,EARjB;AAAA;AASxB,+CAAMiE,YAAY,CAACC,MAAb,CAAoBX,GAApB,EAAyB,yEAAY3K,QAAZ,GAAuB,QAAhD,EAA0DmL,OAA1D,EACHT,IADG,CACE,UAAC7J,IAAD,EAAU;AACd;AACA;AACA,iDAAI,CAACkB,YAAL,CAAkBqF,MAAlB,CAAyB,uBAAzB;;AACA,iDAAI,CAAC5E,aAAL,GAAqB,KAArB;AACA,8CAAI+I,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW5K,IAAI,CAAC6K,QAAhB,CAAb;AAEA,iDAAI,CAAC7F,EAAL,CAAQmB,KAAR,CAAcqC,IAAd,GAAqBkC,MAAM,CAACI,MAA5B;;AACA,iDAAI,CAACrJ,GAAL,CAASsJ,aAAT,GARc,CASd;;AACD,yCAXG,EAWD,UAAC/D,GAAD,EAAS;AACV,iDAAI,CAACrF,aAAL,GAAqB,KAArB;;AACA,iDAAI,CAACT,YAAL,CAAkBqF,MAAlB,CAAyB,OAAzB,EAAkC,QAAlC;;AACA,iDAAI,CAAC9E,GAAL,CAASsJ,aAAT;;AACAtH,iDAAO,CAACC,GAAR,CAAYsD,GAAZ,EAJU,CAKV;AACD,yCAjBG,CAAN;;AATwB;AAAA;AAAA;;AAAA;AA6BxB,6CAAKrF,aAAL,GAAqB,KAArB;AACA,6CAAKT,YAAL,CAAkBqF,MAAlB,CAAyB,oCAAzB,EAA+D,QAA/D;;AA9BwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAjB;AAAA,6BAAX;AAkCD,2BApCD,EAoCG,UAAAS,GAAG,EAAI;AACRvD,mCAAO,CAACC,GAAR,CAAYsD,GAAZ;AACA,kCAAMA,GAAN;AACD,2BAvCD;AAwCD;AACF,uBArFK,EAqFH,UAAAA,GAAG,EAAI;AACRvD,+BAAO,CAACC,GAAR,CAAYsD,GAAZ;AACA,8BAAMA,GAAN;AACD,uBAxFK,CAAN;;AAFwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAb;AAAA,WAA7B,EA2FG,UAAAA,GAAG,EAAI;AACRvD,mBAAO,CAACC,GAAR,CAAYsD,GAAZ;AACA,kBAAMA,GAAN;AACD,WA9FD;AAgGD;AA1csB;;AAAA;AAAA,OAAzB;;;;cA8BoB;;cACD;;cACM;;cACC;;cACI;;cACJ;;cACD;;cACP;;cACO;;cACA;;cACP;;cACI;;cACA;;cACL;;cACA;;;;AAzB4B,8DAA1C,gEAAU,YAAV,EAAwB;AAAE,gBAAQ;AAAV,KAAxB,CAA0C,G,sBAAA,E,YAAA,E,MAAA;AAnBhCpG,gBAAY,6DALxB,gEAAU;AACToK,cAAQ,EAAE,aADD;AAETC,cAAQ,EAAR;AAAA;AAAA,2GAFS;;;;AAAA,KAAV,CAKwB,GAAZrK,YAAY,CAAZ","file":"edit-editshop-module-es5.js","sourcesContent":["export default \"<!-- /**\\r\\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\\r\\n *\\r\\n * Copyright © 2018-present Enappd. All rights reserved.\\r\\n *\\r\\n * This source code is licensed as per the terms found in the\\r\\n * LICENSE.md file in the root directory of this source .\\r\\n */ -->\\r\\n\\r\\n<ion-header class=\\\"mybg\\\">\\r\\n  <ion-toolbar color=\\\"mytheme\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: black;\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\" style=\\\"color: black;\\\">Edit Shop</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button style=\\\"color: black;\\\" defaultHref=\\\"/\\\" slot=\\\"end\\\"> </ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n\\r\\n  <ion-grid>\\r\\n    <form [formGroup]=\\\"fg\\\">\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-label>Shop Name</ion-label>\\r\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Shop Name\\\" formControlName=\\\"Name\\\" class=\\\"input ion-padding-horizontal\\\">\\r\\n          </ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Name\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('Name').hasError(validation.type) && (fg.get('Name').dirty || fg.get('Name').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n        <ion-col>\\r\\n          <ion-label>Contact</ion-label>\\r\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Contact\\\" formControlName=\\\"Contact\\\" class=\\\"input ion-padding-horizontal\\\">\\r\\n          </ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.mobileNumber\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('Contact').hasError(validation.type) && (fg.get('Contact').dirty || fg.get('Contact').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n        <ion-col>\\r\\n          <ion-label>NTN Number</ion-label>\\r\\n          <ion-input type=\\\"number\\\" placeholder=\\\"NTN Number\\\" formControlName=\\\"NDN_Number\\\"\\r\\n            class=\\\"input ion-padding-horizontal\\\"></ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.NDN_Number\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('NDN_Number').hasError(validation.type) && (fg.get('NDN_Number').dirty  &&  fg.get('NDN_Number').minlength || fg.get('NDN_Number').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Account Type</ion-label>\\r\\n            <ion-select name=\\\"PaymentMethod\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"AccountType\\\"\\r\\n              (ionChange)=\\\"AccountTypeForPayment($event)\\\">\\r\\n              <ion-select-option value=\\\"Bank\\\">Bank </ion-select-option>\\r\\n              <ion-select-option value=\\\"EasyPaisa\\\">EasyPaisa </ion-select-option>\\r\\n              <ion-select-option value=\\\"JazzCash\\\">JazzCash </ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Type\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('AccountType').hasError(validation.type) && (fg.get('AccountType').dirty || fg.get('AccountType').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col *ngIf=\\\"fg.value.AccountType == 'Bank'\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Select Bank</ion-label>\\r\\n            <ion-select name=\\\"bank\\\" formControlerName=\\\"BankName\\\" (ionChange)=\\\"BankNamess($event)\\\">\\r\\n              <ion-select-option *ngFor=\\\"let bank of banklist\\\" [value]=\\\"bank.bankName\\\">{{bank.bankName}}\\r\\n              </ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.BankName\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('BankName').hasError(validation.type) && (fg.get('BankName').dirty || fg.get('BankName').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-label>Account Number/ Phone Number</ion-label>\\r\\n          <ion-input type=\\\"text\\\" formControlName=\\\"AccountNumber\\\" placeholder=\\\"Account Number/ Phone Number\\\"\\r\\n            class=\\\"input ion-padding-horizontal\\\"></ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.AccountNumber\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('AccountNumber').hasError(validation.type) && (fg.get('AccountNumber').dirty || fg.get('AccountNumber').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n        <ion-col>\\r\\n          <ion-label>Delivery Radius</ion-label>\\r\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Radius\\\" formControlName=\\\"DeliveryRadius\\\"\\r\\n            class=\\\"input ion-padding-horizontal\\\"></ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Radious\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('DeliveryRadius').hasError(validation.type) && (fg.get('DeliveryRadius').dirty || fg.get('DeliveryRadius').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n\\r\\n      <!-- <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n    <ion-col>\\r\\n      <ion-checkbox checked=\\\"true\\\" formControlName=\\\"IsReturnable\\\"></ion-checkbox>\\r\\n    <ion-label>  Allow product Exchange</ion-label> \\r\\n    </ion-col>\\r\\n  </ion-row> -->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <!-- <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Shop Category</ion-label>\\r\\n     <ion-select name=\\\"GroupId\\\" formControlName=\\\"GroupId\\\">\\r\\n       <ion-select-option *ngFor =\\\"let group of groups\\\" value=\\\"{{group.id}}\\\">{{group.name}}</ion-select-option>\\r\\n     </ion-select>\\r\\n    </ion-item> -->\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Shop Category</ion-label><br>\\r\\n            <ion-select [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"GroupId\\\">\\r\\n              <ion-select-option *ngFor=\\\"let group of groups\\\" [value]=\\\"group.id\\\">{{group.name}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Type\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('GroupId').hasError(validation.type) && (fg.get('GroupId').dirty || fg.get('GroupId').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row class=\\\"ion-align-items-center\\\">\\r\\n        <!-- <ion-col>\\r\\n      <ion-button expand=\\\"block\\\"   color=\\\"mycolor1\\\" (click)=\\\"uploadPhoto('banner')\\\"><strong class=\\\"white ion-text-capitalize\\\">Banner</strong></ion-button>\\r\\n    </ion-col> -->\\r\\n        <ion-col>\\r\\n          <ion-button expand=\\\"block\\\" color=\\\"mycolor1\\\" (click)=\\\"uploadPhoto('logo')\\\"><strong\\r\\n              class=\\\"white ion-text-capitalize\\\">\\r\\n              <ion-text color=\\\"light\\\" style=\\\"font-size: 18px; font-family: 'Times New Roman', serif;\\\">Logo</ion-text>\\r\\n            </strong></ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <!-- <ion-col>\\r\\n       <ion-spinner *ngIf=\\\"uploadingbanner\\\" color=\\\"mycolor1\\\"></ion-spinner>\\r\\n      <ion-img *ngIf=\\\"fg.value.Banner\\\" [src]=\\\"resourceURL + fg.value.Banner\\\" alt=\\\"Banner Image\\\"></ion-img>\\r\\n    </ion-col> -->\\r\\n        <ion-col>\\r\\n          <ion-spinner *ngIf=\\\"uploadinglogo\\\" color=\\\"mycolor1\\\" class=\\\"ion-align-items-center\\\"></ion-spinner>\\r\\n          <ion-img *ngIf=\\\"fg.value.Logo\\\" [src]=\\\"resourceURL + fg.value.Logo\\\" alt=\\\"Logo Image\\\">\\r\\n            <ion-spinner color=\\\"primary\\\"></ion-spinner>\\r\\n          </ion-img>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n        <ion-col>\\r\\n          <ion-label>Address</ion-label>\\r\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Address\\\" disabled formControlName=\\\"Address\\\"\\r\\n            class=\\\"input ion-padding-horizontal\\\"></ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Address\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('Address').hasError(validation.type) && (fg.get('Address').dirty || fg.get('Address').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-label class=\\\"ion-text-justify\\\" style=\\\"padding-left: 10px; padding-right: 10px; padding-bottom: 15px; \\\"><strong>Note: </strong>Drag marker on map to select\\r\\n          the address or type in searchbox below to look for your address</ion-label>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item style=\\\"min-height: 300px;\\\">\\r\\n            <div #mapElement class=\\\"map\\\" style=\\\"min-height: 300px;\\\"></div>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-button expand=\\\"block\\\" (click)=\\\"UpdateShop()\\\" color=\\\"mycolor1\\\" [diabled]=\\\"!fg.valid\\\"><strong\\r\\n              class=\\\"white\\\">\\r\\n              <ion-text color=\\\"light\\\" style=\\\"font-size: 18px; font-family: 'Times New Roman', serif;\\\">Update</ion-text>\\r\\n            </strong></ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </form>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-searchbar [value]=\\\"selectedPlace\\\" [(ngModel)]=\\\"autocomplete.input\\\" (ionInput)=\\\"updateSearchResults()\\\"\\r\\n      placeholder=\\\"Search for a place\\\">\\r\\n    </ion-searchbar>\\r\\n  </ion-toolbar>\\r\\n  <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\r\\n    <ion-item *ngFor=\\\"let item of autocompleteItems\\\" tappable (click)=\\\"selectSearchResult(item)\\\">\\r\\n      {{ item.description }}\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-footer>\";","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError,map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopService extends BaseService {\r\n\r\n  private authenticationState = new BehaviorSubject(false);\r\n  private readonly API_SHOP = `${environment.BASE_URL}shop/`;\r\n  private readonly API_PRODUCT = `${environment.BASE_URL}product/`\r\n  private readonly API_BANK = `${environment.BASE_URL}bank/`\r\n  constructor(\r\n    protected http: HttpClient\r\n  ) { super(http); }\r\n\r\n\r\n  GetShops(lat,lng): Observable<any> {\r\n    const url = `${this.API_SHOP}${lat}/${lng}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  GetShopsByCategory(groupid,lat,lng): Observable<any> {\r\n    const url = `${this.API_SHOP}${lat}/${lng}/${groupid}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetSingleShopByName(): Observable<any> {\r\n    const url = `${this.API_SHOP}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  \r\n  getApprovedShops(): Observable<any> {\r\n    const url = `${this.API_SHOP}verified`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  getUnApprovedShops(): Observable<any> {\r\n    const url = `${this.API_SHOP}unverfied`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  getShopsByUser(id): Observable<any> {\r\n    const url = `${this.API_SHOP}user/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  ApproveShop(id , data): Observable<any> {\r\n    const url = `${this.API_SHOP}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  UpdateShop(id , data): Observable<any> {\r\n    const url = `${this.API_SHOP}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  UpdateProduct(id , data): Observable<any> {\r\n    const url = `${this.API_PRODUCT}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  GetShopProducts(id): Observable<any> {\r\n    const url = `${this.API_SHOP}${id}/products`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  \r\n  GetShopByProducts(id): Observable<any> {\r\n    const url = `${this.API_SHOP}products/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetShopByuserProducts(id): Observable<any> {\r\n    const url = `${this.API_PRODUCT}userProduct/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  \r\n\r\n  GetShop(id): Observable<any> {\r\n    const url = `${this.API_SHOP}${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  \r\n  \r\n  GetProductDetail(id): Observable<any> {\r\n    const url = `${this.API_PRODUCT}${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  PostShop(data): Observable<any> {\r\n    const url = `${this.API_SHOP}`;\r\n    return this.http.post(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  PostProduct(data): Observable<any> {\r\n    const url = `${this.API_PRODUCT}`;\r\n    return this.http.post(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n  GetProduct(): Observable<any> {\r\n    const url = `${this.API_PRODUCT}`;\r\n    return this.http.get(url,  this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n  DeleteProductbyId(id): Observable<any> {\r\n    const url =`${this.API_PRODUCT}${id}`;\r\n    return this.http.delete(url,  this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  DeleteShop(id): Observable<any> {\r\n    const url =`${this.API_SHOP}${id}`;\r\n    return this.http.delete(url,  this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  GetBank(): Observable<any> {\r\n    const url = `${this.API_BANK}`;\r\n    return this.http.get(url,  this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\r\n *\r\n * Copyright © 2018-present Enappd. All rights reserved.\r\n *\r\n * This source code is licensed as per the terms found in the\r\n * LICENSE.md file in the root directory of this source .\r\n * \r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { EditShopPage } from './editshop.page';\r\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\r\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\r\nimport { FileChooser } from '@ionic-native/file-chooser/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { FilePath } from '@ionic-native/file-path/ngx';\r\nimport { FileTransfer} from '@ionic-native/file-transfer/ngx';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: EditShopPage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [EditShopPage],\r\n  providers:[Geolocation , FileChooser , File ,FilePath, FileTransfer],\r\n  entryComponents: []\r\n})\r\nexport class EditShopPageModule {}\r\n","export default \".imgdiv {\\n  width: 80%;\\n  height: 60%;\\n}\\n\\n.img1 {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.small a {\\n  font-size: 13px;\\n  text-decoration: unset !important;\\n}\\n\\n.input {\\n  background-color: #f0f0f0;\\n  border: 1px solid #d2d2d2;\\n  border-radius: 9px;\\n  font-size: 0.9em !important;\\n}\\n\\n.white {\\n  color: white;\\n}\\n\\n.title {\\n  font-size: 18px;\\n}\\n\\n.logo {\\n  width: 1.25em !important;\\n}\\n\\n.center {\\n  text-align: center;\\n}\\n\\n.map {\\n  height: 100%;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvcE93bmVyL3Nob3AvZWRpdC9EOlxcZ2l0a3VpY2tzYXZlXFxtdWx0aXN0b3JlLW1vYmlsZS1hcHAvc3JjXFxhcHBcXHNob3BPd25lclxcc2hvcFxcZWRpdFxcZWRpdHNob3AucGFnZS5zY3NzIiwic3JjL2FwcC9zaG9wT3duZXIvc2hvcC9lZGl0L2VkaXRzaG9wLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFVBQUE7RUFDQSxXQUFBO0FDQUo7O0FERUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVJO0VBQ0ksZUFBQTtFQUNBLGlDQUFBO0FDQ1I7O0FERUE7RUFDSSx5QkFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSwyQkFBQTtBQ0NKOztBRENBO0VBQ0ksWUFBQTtBQ0VKOztBREFBO0VBQ0ksZUFBQTtBQ0dKOztBRERBO0VBQ0ksd0JBQUE7QUNJSjs7QUREQTtFQUNJLGtCQUFBO0FDSUo7O0FEREE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtBQ0lKIiwiZmlsZSI6InNyYy9hcHAvc2hvcE93bmVyL3Nob3AvZWRpdC9lZGl0c2hvcC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmltZ2RpdntcclxuICAgIHdpZHRoOjgwJTtcclxuICAgIGhlaWdodDo2MCU7XHJcbn1cclxuLmltZzF7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgaGVpZ2h0OjEwMCU7XHJcbn1cclxuLnNtYWxsIHtcclxuICAgIGF7XHJcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5zZXQgIWltcG9ydGFudDtcclxuICAgIH1cclxufVxyXG4uaW5wdXQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MCwgMjQwLCAyNDApO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDIxMCwgMjEwLCAyMTApO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOXB4O1xyXG4gICAgZm9udC1zaXplOiAuOWVtICFpbXBvcnRhbnQ7XHJcbn1cclxuLndoaXRle1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcbi50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuLmxvZ28ge1xyXG4gICAgd2lkdGg6IDEuMjVlbSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uY2VudGVye1xyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbn1cclxuXHJcbi5tYXAge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfSIsIi5pbWdkaXYge1xuICB3aWR0aDogODAlO1xuICBoZWlnaHQ6IDYwJTtcbn1cblxuLmltZzEge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc21hbGwgYSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bnNldCAhaW1wb3J0YW50O1xufVxuXG4uaW5wdXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDJkMmQyO1xuICBib3JkZXItcmFkaXVzOiA5cHg7XG4gIGZvbnQtc2l6ZTogMC45ZW0gIWltcG9ydGFudDtcbn1cblxuLndoaXRlIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4udGl0bGUge1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbi5sb2dvIHtcbiAgd2lkdGg6IDEuMjVlbSAhaW1wb3J0YW50O1xufVxuXG4uY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubWFwIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\";","/**\r\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\r\n *\r\n * Copyright © 2018-present Enappd. All rights reserved.\r\n *\r\n * This source code is licensed as per the terms found in the\r\n * LICENSE.md file in the root directory of this source .\r\n * \r\n */\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef, NgZone } from '@angular/core'\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { GroupService } from 'src/app/services/group.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoadingController } from \"@ionic/angular\";\r\nimport { ToastService } from \"src/app/services/toast.service\";\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpEventType } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\r\nimport { FileChooser } from '@ionic-native/file-chooser/ngx';\r\nimport { File, FileEntry } from '@ionic-native/file/ngx';\r\nimport { FilePath } from '@ionic-native/file-path/ngx';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { group } from 'console';\r\nimport { google } from '@google/maps';\r\ndeclare var google;\r\n\r\n\r\n@Component({\r\n  selector: 'app-addshop',\r\n  templateUrl: 'editshop.page.html',\r\n  styleUrls: ['editshop.page.scss'],\r\n})\r\nexport class EditShopPage implements OnInit {\r\n\r\n  fg: FormGroup;\r\n  imagepath: string;\r\n  groups: any;\r\n  GroupId: any;\r\n  AccountType: any;\r\n  BankName: any;\r\n  groupss: any;\r\n  banklist: any;\r\n  uploadProgress: number;\r\n  uploadinglogo = false;\r\n  uploadingbanner = false;\r\n  resourceURL = environment.RESOURCE_URL;\r\n  id = this.route.snapshot.paramMap.get('id');\r\n  myMarker;\r\n  map;\r\n  latitude: any;\r\n  longitude: any;\r\n  @ViewChild(\"mapElement\", { static: true }) mapElement;\r\n\r\n\r\n  GoogleAutocomplete: google.maps.places.AutocompleteService;\r\n  autocomplete: { input: string; };\r\n  autocompleteItems: any[];\r\n  location: any;\r\n  placeid: any;\r\n  selectedPlace: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private shopservice: ShopService,\r\n    private groupservice: GroupService,\r\n    public loadingController: LoadingController,\r\n    private toastService: ToastService,\r\n    private formBuilder: FormBuilder,\r\n    private http: HttpClient,\r\n    private geolocation: Geolocation,\r\n    private fileChooser: FileChooser,\r\n    private file: File,\r\n    private filePath: FilePath,\r\n    private transfer: FileTransfer,\r\n    private ref: ChangeDetectorRef,\r\n    public zone: NgZone) {\r\n\r\n    this.GoogleAutocomplete = new google.maps.places.AutocompleteService();\r\n    this.autocomplete = { input: '' };\r\n    this.autocompleteItems = [];\r\n  }\r\n\r\n  updateSearchResults() {\r\n    if (this.autocomplete.input == '') {\r\n      this.autocompleteItems = [];\r\n      return;\r\n    }\r\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input },\r\n      (predictions, status) => {\r\n        console.log(status);\r\n        this.autocompleteItems = [];\r\n        this.zone.run(() => {\r\n          predictions.forEach((prediction) => {\r\n            this.autocompleteItems.push(prediction);\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  selectSearchResult(item) {\r\n\r\n    this.myMarker.setMap(null);\r\n    this.autocompleteItems = [];\r\n    var geocoder1 = new google.maps.Geocoder();\r\n\r\n    geocoder1.geocode({ 'placeId': item.place_id }, (results, status) => {\r\n      if (status === 'OK' && results[0]) {\r\n        this.myMarker = new google.maps.Marker({\r\n          position: results[0].geometry.location,\r\n          map: this.map,\r\n          draggable: true\r\n        });\r\n\r\n        this.map.setCenter(this.myMarker.position);\r\n        this.myMarker.setMap(this.map);\r\n        this.selectedPlace = \"\" + results[0].formatted_address;\r\n        this.fg.controls.Address.setValue(\"\" + results[0].formatted_address);\r\n\r\n        google.maps.event.addListener(this.myMarker, \"dragend\", () => {\r\n          this.latitude = this.myMarker.getPosition().lat();\r\n          this.longitude = this.myMarker.getPosition().lng();\r\n          this.getAddressFromMarker(this.latitude, this.longitude, this.fg)\r\n        });\r\n      }\r\n    })\r\n  }\r\n  ngOnInit() {\r\n    this.fg = this.formBuilder.group({\r\n      'Id': [null],\r\n      'Name': [null, [Validators.required, Validators.pattern(\"^(?! )[A-Za-z0-9$#@&?!*()%<>+=-|,. ]*()$\")]],\r\n      'GroupId': [null],\r\n      'UserId': [null],\r\n      'Contact': [null, Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\"^0[03][0-9]{9}$\")\r\n      ])],\r\n      'NDN_Number': [null, [Validators.required, Validators.pattern(\"[0-9]{13}$\")]],\r\n      'AccountType': [null, Validators.required],\r\n      'BankName': [null],\r\n      'AccountNumber': [null, Validators.required],\r\n      'Latitude': [null],\r\n      'Longitude': [null],\r\n      'DeliveryRadius': [null, Validators.compose([Validators.required, Validators.min(10)])],\r\n      'Address': [null, Validators.required],\r\n      'IsReturnable': [null],\r\n      'IsVerified': [false],\r\n      'IsDisabled': [false],\r\n      'Logo': [null, Validators.required],\r\n      // 'Banner': [null],\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  async ionViewDidEnter() {\r\n    await this.getGroups();\r\n    await this.GetBankList();\r\n    await this.getShop(this.id);\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  preventDefault(e) {\r\n    e.preventDefault();\r\n  }\r\n  AccountTypeForPayment(event) {\r\n    this.fg.value.AccountType = event.target.value;\r\n    this.fg.controls['AccountType'].setValue(event.target.value);\r\n    // if(this.fg.value.AccountType= 'Bank')\r\n    // {\r\n    //   this.fg.controls['BankName'].setValidators(Validators.required);\r\n    // }\r\n    // this.fg.value.AccountType= event.target.value;\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  BankNamess(event) {\r\n    this.fg.controls['BankName'].setValue(event.target.value);\r\n    console.log(event.target.value);\r\n\r\n  }\r\n\r\n  updatelatlng(lt, lg) {\r\n    this.latitude = lt;\r\n    this.longitude = lg\r\n  }\r\n  async getGroups() {\r\n    const loading = await this.loadingController.create({ message: \"Loading\" });\r\n    await loading.present();\r\n    await this.groupservice.GetGroups().subscribe(\r\n      res => {\r\n        loading.dismiss();\r\n        if (res) {\r\n          console.log(res);\r\n          this.groups = res;\r\n        } else {\r\n          loading.dismiss();\r\n          this.toastService.create(res.Message, \"danger\");\r\n        }\r\n      },\r\n      err => {\r\n        loading.dismiss();\r\n        this.toastService.create(err, \"danger\");\r\n      }\r\n    );\r\n  }\r\n  async loadMap() {\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, {\r\n      center: { lat: this.latitude, lng: this.longitude },\r\n      zoom: 15\r\n    });\r\n\r\n    this.myMarker = new google.maps.Marker({\r\n      position: { lat: this.latitude, lng: this.longitude },\r\n      draggable: true\r\n    });\r\n    this.map.setCenter(this.myMarker.position);\r\n    this.myMarker.setMap(this.map);\r\n\r\n    google.maps.event.addListener(this.myMarker, \"dragend\", () => {\r\n      this.latitude = this.myMarker.getPosition().lat();\r\n      this.longitude = this.myMarker.getPosition().lng();\r\n\r\n      this.getAddressFromMarker(this.latitude, this.longitude, this.fg);\r\n\r\n\r\n    });\r\n  }\r\n\r\n\r\n  getAddressFromMarker(markLat: any, markLong: any, formGroup: FormGroup) {\r\n    var latlng = new google.maps.LatLng(markLat, markLong);\r\n    var geocoder = new google.maps.Geocoder();\r\n    geocoder.geocode({ 'latLng': latlng }, function (results, status) {\r\n      if (status == google.maps.GeocoderStatus.OK) {\r\n        if (results[1]) {\r\n          this.strAddress = \"\";\r\n          this.strAddress = this.strAddress + results[1].formatted_address;\r\n          formGroup.controls.Address.setValue(\"\" + this.strAddress);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async UpdateShop() {\r\n    //console.log(this.fg.value)\r\n    this.fg.controls['GroupId'].setValue(this.GroupId);\r\n    this.fg.value.Latitude = this.latitude;\r\n    this.fg.value.Longitude = this.longitude;\r\n    const loading = await this.loadingController.create({ message: \"Loading\" });\r\n    // await loading.present();\r\n    let obj = this.fg.value;\r\n    obj.Name = obj.Name.trim();\r\n    obj.Address = obj.Address.trim();\r\n    obj.AccountNumber = obj.AccountNumber.trim();\r\n    if (obj.Name.length == 0 && obj.Address == 0 && obj.AccountNumber == 0) {\r\n      this.fg.controls['Name'].setValue(null);\r\n      this.fg.controls['Name'].updateValueAndValidity();\r\n      this.fg.controls['Address'].setValue(null);\r\n      this.fg.controls['Address'].updateValueAndValidity();\r\n      this.fg.controls['AccountNumber'].setValue(null);\r\n      this.fg.controls['AccountNumber'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Name.length == 0 && obj.Address == 0) {\r\n      this.fg.controls['Name'].setValue(null);\r\n      this.fg.controls['Name'].updateValueAndValidity();\r\n      this.fg.controls['Address'].setValue(null);\r\n      this.fg.controls['Address'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Name.length == 0 && obj.AccountNumber == 0) {\r\n      this.fg.controls['Name'].setValue(null);\r\n      this.fg.controls['Name'].updateValueAndValidity();\r\n      this.fg.controls['AccountNumber'].setValue(null);\r\n      this.fg.controls['AccountNumber'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Address == 0 && obj.AccountNumber == 0) {\r\n      this.fg.controls['Address'].setValue(null);\r\n      this.fg.controls['Address'].updateValueAndValidity();\r\n      this.fg.controls['AccountNumber'].setValue(null);\r\n      this.fg.controls['AccountNumber'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Name.length == 0) {\r\n      this.fg.controls['Name'].setValue(null);\r\n      this.fg.controls['Name'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Address == 0) {\r\n      this.fg.controls['Address'].setValue(null);\r\n      this.fg.controls['Address'].updateValueAndValidity();\r\n    }\r\n    else if (obj.AccountNumber == 0) {\r\n      this.fg.controls['AccountNumber'].setValue(null);\r\n      this.fg.controls['AccountNumber'].updateValueAndValidity();\r\n    }\r\n    else if (this.fg.value.price < 1) {\r\n      this.toastService.create(\"Price must be greater then zero\", \"danger\");\r\n    }\r\n    else if (this.fg.value.DeliveryRadius < 10) {\r\n      this.toastService.create(\"radius must be be 10 or higher\", \"danger\");\r\n      return false;\r\n    }\r\n    else if (this.fg.value.Logo == null) {\r\n      this.toastService.create(\"Please upload the shop photo\", 'danger');\r\n    }\r\n    else {\r\n      const loading = await this.loadingController.create({ message: \"Loading\" });\r\n      await loading.present();\r\n      await this.shopservice.UpdateShop(this.id, this.fg.value).subscribe(\r\n        res => {\r\n          console.log(res, \"shop\");\r\n          loading.dismiss();\r\n          this.toastService.create(\"Successfully updated\", \"success\");\r\n          this.router.navigate(['shopowner/shops']);\r\n\r\n        },\r\n        err => {\r\n          loading.dismiss();\r\n          this.toastService.create(err, \"danger\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n  async GetBankList() {\r\n    const loading = await this.loadingController.create({ message: \"Loading\" });\r\n    await loading.present();\r\n    await this.shopservice.GetBank().subscribe(\r\n      res => {\r\n        loading.dismiss();\r\n        if (res) {\r\n          console.log(res);\r\n          this.banklist = res;\r\n        } else {\r\n          loading.dismiss();\r\n          this.toastService.create(res.Message, \"danger\");\r\n        }\r\n      },\r\n      err => {\r\n        loading.dismiss();\r\n        this.toastService.create(err, \"danger\");\r\n      }\r\n    );\r\n  }\r\n\r\n  async getShop(id) {\r\n    const loading = await this.loadingController.create({ message: \"Loading\" });\r\n    await loading.present();\r\n    await this.shopservice.GetShop(id).subscribe(\r\n      res => {\r\n        loading.dismiss();\r\n        if (res) {\r\n          // console.log(res);\r\n          this.latitude = res.latitude;\r\n          this.longitude = res.longitude;\r\n          this.fg.controls['Id'].setValue(res.id);\r\n          this.fg.controls['Name'].setValue(res.name);\r\n          // this.fg.controls['GroupId'].setValue(res.groupId);\r\n          // this.fg.value.GroupId=res.groupId;\r\n          this.GroupId = (res.groupId);\r\n          this.fg.controls['UserId'].setValue(res.userId);\r\n          this.fg.controls['Contact'].setValue(res.contact);\r\n          this.fg.controls['Latitude'].setValue(res.latitude);\r\n          this.fg.controls['Longitude'].setValue(res.longitude);\r\n          this.fg.controls['DeliveryRadius'].setValue(res.deliveryRadius);\r\n          this.fg.controls['NDN_Number'].setValue(res.ndN_Number);\r\n          this.fg.controls['Address'].setValue(res.address);\r\n          this.AccountType = (res.accountType);\r\n          this.BankName = (res.bankName);\r\n          //  this.fg.controls['AccountType'].setValue(res.accountType);\r\n          //this.fg.controls['BankName'].setValue(res.bankName);\r\n          this.fg.controls['AccountNumber'].setValue(res.accountNumber);\r\n          this.fg.controls['IsDisabled'].setValue(res.isDisabled);\r\n          this.fg.controls['IsVerified'].setValue(res.isVerified);\r\n          this.fg.controls['Logo'].setValue(res.logo);\r\n          //  this.fg.controls['Banner'].setValue(res.banner);\r\n          this.loadMap();\r\n          //  this.ngOnInit();\r\n        } else {\r\n          loading.dismiss();\r\n          this.toastService.create(res.Message, \"danger\");\r\n        }\r\n      },\r\n      err => {\r\n        loading.dismiss();\r\n        this.toastService.create(err, \"danger\");\r\n      }\r\n    );\r\n  }\r\n\r\n  uploadPhoto(type) {\r\n\r\n    this.fileChooser.open().then(async uri => {\r\n      console.log(uri);\r\n      await this.filePath.resolveNativePath(uri).then(filePath => {\r\n        //this.filesPath = filePath;\r\n        // if(type=='banner')\r\n        // {\r\n\r\n        //  this.uploadingbanner = true;\r\n        //  this.file.resolveLocalFilesystemUrl(filePath).then(fileInfo =>\r\n        //   {\r\n        //     let files = fileInfo as FileEntry;\r\n        //     files.file(async success =>\r\n        //       {\r\n        //         //this.fileType   = success.type;\r\n        //         let filesName  = success.name;\r\n        //         console.log(filesName);\r\n        //         let options: FileUploadOptions = {\r\n        //           fileName: filesName\r\n        //         }\r\n        //         const fileTransfer: FileTransferObject = this.transfer.create();\r\n        //       await  fileTransfer.upload(uri, environment.BASE_URL+'upload', options)\r\n        //         .then((data) => {\r\n        //           // success\r\n        //          // console.log(data);\r\n        //          this.toastService.create(\"successfully Uploaded\");\r\n        //           this.uploadingbanner = false;\r\n        //           let dbpath = JSON.parse(data.response); \r\n        //           this.fg.value.Logo = dbpath.dbPath;\r\n\r\n        //           //console.log(this.fg1.value.MonogramImage);\r\n        //         }, (err) => {\r\n        //           this.uploadingbanner = false;\r\n        //           this.toastService.create(\"Error\" , \"danger\");\r\n        //           this.ref.detectChanges();\r\n        //           console.log(err)\r\n        //           // error\r\n        //         })\r\n        //       });\r\n        //   },err =>\r\n        //   {\r\n        //     console.log(err);\r\n        //     throw err;\r\n        //   });\r\n        // }\r\n        if (type == 'logo') {\r\n          this.uploadinglogo = true;\r\n          this.file.resolveLocalFilesystemUrl(filePath).then(fileInfo => {\r\n            let files = fileInfo as FileEntry;\r\n            files.file(async success => {\r\n              //this.fileType   = success.type;\r\n              if (success.size < 204800) {\r\n                let filesName = success.name;\r\n                console.log(filesName);\r\n                let options: FileUploadOptions = {\r\n                  fileName: filesName\r\n                }\r\n                const fileTransfer: FileTransferObject = this.transfer.create();\r\n                await fileTransfer.upload(uri, environment.BASE_URL + 'upload', options)\r\n                  .then((data) => {\r\n                    // success\r\n                    // console.log(data);\r\n                    this.toastService.create(\"successfully Uploaded\");\r\n                    this.uploadinglogo = false;\r\n                    let dbpath = JSON.parse(data.response);\r\n\r\n                    this.fg.value.Logo = dbpath.dbPath\r\n                    this.ref.detectChanges();\r\n                    //console.log(this.fg1.value.MonogramImage);\r\n                  }, (err) => {\r\n                    this.uploadinglogo = false;\r\n                    this.toastService.create(\"Error\", \"danger\");\r\n                    this.ref.detectChanges();\r\n                    console.log(err)\r\n                    // error\r\n                  })\r\n              }\r\n              else {\r\n                this.uploadinglogo = false;\r\n                this.toastService.create(\"File size must be less than 200 kb\", \"danger\");\r\n\r\n              }\r\n            });\r\n          }, err => {\r\n            console.log(err);\r\n            throw err;\r\n          });\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n        throw err;\r\n      });\r\n    }, err => {\r\n      console.log(err);\r\n      throw err;\r\n    });\r\n\r\n  }\r\n\r\n  validation_messages = {\r\n\r\n    Name: [{ type: \"required\", message: \"Name is required.\" },\r\n    ],\r\n    lastName: [{ type: \"required\", message: \"LastName is required.\" }],\r\n    NDN_Number: [\r\n      { type: \"required\", message: \"Please enter a valid NTN NO:\" },\r\n      { type: \"pattern\", message: \"NTN number must be 13 character\" },\r\n    ],\r\n    mobileNumber: [\r\n      { type: \"required\", message: \"MobileNumber is required & without space.\" },\r\n      { type: \"pattern\", message: \"Mobile number like 03xxxxxxxxx and length 11 char\" }\r\n    ],\r\n    Address: [\r\n      { type: \"required\", message: \"Address is required.\" },\r\n    ],\r\n    Type: [\r\n      { type: \"required\", message: \"Shop cateory is required.\" },\r\n    ],\r\n    AccountType: [\r\n      { type: \"required\", message: \"Payment method is required.\" },\r\n    ],\r\n    Radious: [\r\n      { type: \"required\", message: \"Field is required.\" },\r\n      { type: \"min\", message: \"radius must be be 10 or higher.\" },\r\n    ],\r\n    AccountNumber: [\r\n      { type: \"required\", message: \"Account Number is required.\" },\r\n    ],\r\n    BankName: [\r\n      { type: \"required\", message: \"Account Number is required.\" },\r\n    ],\r\n  };\r\n\r\n}\r\n"]}