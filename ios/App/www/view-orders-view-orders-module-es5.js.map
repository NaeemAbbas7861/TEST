{"version":3,"sources":["webpack:///src/app/superAdmin/view-orders/view-orders.page.html","webpack:///src/app/services/order.service.ts","webpack:///src/app/services/toast.service.ts","webpack:///src/app/superAdmin/view-orders/view-orders.module.ts","webpack:///src/app/superAdmin/view-orders/view-orders.page.scss","webpack:///src/app/superAdmin/view-orders/view-orders.page.ts"],"names":["OrderService","http","authenticationState","API_ORDER","BASE_URL","API_EARNING","API_RETURNDISCOUNT","id","url","get","httpOptions","pipe","extractData","handleError","data","post","put","lat","lng","status","riderid","ordercode","date","date1","panelty","providedIn","ToastService","toastCtrl","message","color","ok","duration","toast","dismiss","create","position","present","routes","path","component","loadChildren","OwnerOrderPageModule","imports","forChild","declarations","OrderPageOwner","route","orderservice","loadingController","storage","toastService","allorders","type","snapshot","paramMap","NotOrderFound","Allorders","loading","subscribe","res","orders","console","warn","err","log","doRefresh","event","GetOrder","ngOnInit","setTimeout","target","complete","filter","Item","toLowerCase","includes","searchQuery","length","selector","template"],"mappings":"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","file":"view-orders-view-orders-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"mybg\\\">\\r\\n  <ion-toolbar color=\\\"mytheme\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button color=\\\"dark\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\" color=\\\"dark\\\">Orders</ion-title>\\r\\n    <ion-back-button  color=\\\"dark\\\" defaultHref=\\\"/\\\" slot=\\\"end\\\"> </ion-back-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!-- <div >\\r\\n  <ion-searchbar placeholder=\\\"Search...\\\" expand=\\\"full\\\"  [(ngModel)]=\\\"searchQuery\\\" (ionChange)=\\\"search()\\\"></ion-searchbar>\\r\\n</div> -->\\r\\n\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\"  color=\\\"light\\\">\\r\\n  <ion-row>\\r\\n    <ion-col><ion-input class=\\\"ion-clearInput\\\"  type=\\\"number\\\" placeholder=\\\"Search Order Id\\\"  [(ngModel)]=\\\"orderid\\\"  class=\\\"input ion-padding-horizontal\\\" style=\\\"    width: 200px; height: 30px; margin-top: 7px; \\\" ></ion-input></ion-col>\\r\\n    <ion-col> <ion-button   color=\\\"mycolor1\\\" (click)=\\\"Singleorders(orderid)\\\" size=\\\"small\\\" style=\\\"height: 30px; margin-top: 7px; margin-right: 30px; margin-right: 30px; \\\" class=\\\"end11\\\"><strong >Search</strong></ion-button></ion-col>\\r\\n   </ion-row>\\r\\n     \\r\\n  <ion-card *ngFor= \\\"let order of orders\\\">\\r\\n    <ion-item>\\r\\n    <ion-label> Order ID: <b>{{order.id}}</b></ion-label>\\r\\n    <ion-button color=\\\"mycolor1\\\" size=\\\"small\\\" routerLink = \\\"{{order.id}}/items\\\">View Items</ion-button>\\r\\n  </ion-item>\\r\\n    <ion-card-content>\\r\\n      <!-- <p *ngIf=\\\"shop.isVerified\\\" >Status: <span style=\\\"color: green;\\\">Active</span></p>\\r\\n      <p *ngIf=\\\"!shop.isVerified\\\" >Status: <span style=\\\"color: lightcoral;\\\">Pending</span></p> -->\\r\\n      <!-- <p>Customer Name: {{order.userId}}</p> -->\\r\\n      <!-- <p *ngIf=\\\"order.isSelfPick\\\">Delivery Type: Self Pick</p>\\r\\n      <p *ngIf=\\\"!order.isSelfPick\\\">Delivery Type: Home Delivery</p> -->\\r\\n      <p *ngIf=\\\"order.orderStatus=='2'\\\"> <span  style=\\\"color: green;\\\"> <b>Recevied </b></span> </p>\\r\\n      <p *ngIf=\\\"order.orderStatus=='1'\\\"> <span  style=\\\"color: lightcoral;\\\"><b>Pending </b></span> </p>\\r\\n      <p *ngIf=\\\"order.orderStatus=='0'\\\"> <span  style=\\\"color: success;\\\"> <b>New </b></span> </p>\\r\\n      <p *ngIf=\\\"order.orderStatus=='3'\\\"> <span  style=\\\"color: red;\\\"> <b>Cancel </b></span> </p>\\r\\n      <p>Shop Name: {{order.shop.name}}</p>\\r\\n      <p>Shop Contact: {{order.shop.contact}}</p>\\r\\n      <p>Total Amount: {{order.totalAmmount}}</p>\\r\\n      <p>Place Date: {{order.orderPlacementDate| date}}</p>\\r\\n      <p *ngIf=\\\"order.orderStatus=='2'\\\">Delivery Date: {{order.orderDeliveryDate | date}} </p>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  \\r\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError,map } from 'rxjs/operators';\r\nimport { ObserveOnSubscriber } from 'rxjs/internal/operators/observeOn';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService extends BaseService {\r\n\r\n  private authenticationState = new BehaviorSubject(false);\r\n  private readonly API_ORDER = `${environment.BASE_URL}order/`;\r\n  private readonly API_EARNING= `${environment.BASE_URL}earning/`;\r\n  private readonly API_RETURNDISCOUNT= `${environment.BASE_URL}returnedproduct/`;\r\n // private readonly API_PRODUCT = `${environment.BASE_URL}product/`\r\n  constructor(\r\n    protected http: HttpClient\r\n  ) { super(http); }\r\n\r\n\r\n  GetCustomerOrders(id): Observable<any> {\r\n    const url = `${this.API_ORDER}user/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  Getreturnedproduct(): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetReturnedProductbyId(id): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  DeleteProduct(id): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}${id}`;\r\n    return this.http.delete(url , this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  postreturnedProduct(data): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}`;\r\n    return this.http.post(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  EditProduct(id , data): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n  \r\n  GetOrderItems(id): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}/orderitems`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  Allorders(): Observable<any> {\r\n    const url = `${this.API_ORDER}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  riderDashboard(id): Observable<any> {\r\n    const url = `${this.API_ORDER}rider/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  GetOrder(id): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetCustomerOrder(id): Observable<any> {\r\n    const url = `${this.API_ORDER}customer/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  GetUserShopOrders(id): Observable<any> {\r\n   // const url = `${this.API_ORDER}usershop/${id}`;\r\n    const url = `${this.API_ORDER}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetNewUserShopOrders(id): Observable<any> {\r\n    const url = `${this.API_ORDER}usershop/${id}/0`;\r\n     ///const url = `${this.API_ORDER}`;\r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n\r\n   GetPendingUserShopOrders(id): Observable<any> {\r\n     const url = `${this.API_ORDER}usershop/${id}/1`;\r\n     \r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n   GetCompleteUserShopOrders(id): Observable<any> {\r\n     const url = `${this.API_ORDER}usershop/${id}/2`;\r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n   GetCancelUserShopOrders(id): Observable<any> {\r\n     const url = `${this.API_ORDER}usershop/${id}/3`;\r\n     \r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n\r\n  GetNewRiderOrders(lat , lng): Observable<any> {\r\n     const url = `${this.API_ORDER}${lat}/${lng}`;\r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n\r\n   GetRiderOrdersByStatus(id , status): Observable<any> {\r\n    const url = `${this.API_ORDER}rider/${id}/${status}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  PostOrder(data): Observable<any> {\r\n    const url = `${this.API_ORDER}`;\r\n    return this.http.post(url, data, this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  PutOrder(id , data): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  MarksReceived(id): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}/markreceived`;\r\n    return this.http.put(url, this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  \r\n\r\n  AcceptOrder(id , riderid , status): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}/${riderid}/${status}`;\r\n    return this.http.put(url , this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  CancelOrder(id , status): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}/changestatus/${status}`;\r\n    return this.http.put(url , this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  OrderCompletionCode(id,ordercode, status ): Observable<any> {\r\n    const url = `${this.API_ORDER}complete/${id}/${ordercode}/${status}`;\r\n    return this.http.put(url , this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  GetEarning(date): Observable<any> {\r\n    const url = `${this.API_EARNING}superadmin/${date}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetEarningDatetoDate(date,date1): Observable<any> {\r\n    const url = `${this.API_EARNING}superadmin/${date}/${date1}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  DownloadEarningDatetoDate(date,date1): Observable<any> {\r\n    const url = `${this.API_EARNING}downloadcsv/${date}/${date1}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  GetShopEarning(id,date): Observable<any> {\r\n    const url = `${this.API_EARNING}shopowner/${id}/${date}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  ChangePaymentStatus(id,status,panelty): Observable<any> {\r\n    const url = `${this.API_ORDER}PaymentStatus/${id}/${status}/${panelty}`;\r\n    return this.http.put(url , this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  toast: HTMLIonToastElement;\r\n\r\n  constructor(public toastCtrl: ToastController) { }\r\n\r\n  async create(message: string, color = \"success\", ok = false, duration = 3000) {\r\n    if (this.toast) {\r\n      this.toast.dismiss();\r\n    }\r\n\r\n    this.toast = await this.toastCtrl.create({\r\n      message,\r\n      color: color,\r\n      duration: ok ? null : duration,\r\n      position: 'bottom',\r\n      // showCloseButton: ok,\r\n      // closeButtonText: 'OK'\r\n    });\r\n    this.toast.present();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OrderPageOwner } from './view-orders.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderPageOwner\r\n  },\r\n    { path: ':id/items', loadChildren: './items/view-item.module#ItemsPageModule' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [OrderPageOwner]\r\n})\r\nexport class OwnerOrderPageModule {}\r\n","export default \".success {\\n  color: green;\\n}\\n\\n.fail {\\n  color: red;\\n}\\n\\n.input {\\n  border: 0.5px solid #db9e07;\\n  border-radius: 3px;\\n  font-size: 17px;\\n  color: #080808;\\n}\\n\\n.end11 {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3VwZXJBZG1pbi92aWV3LW9yZGVycy9EOlxcZ2l0a3VpY2tzYXZlXFxtdWx0aXN0b3JlLW1vYmlsZS1hcHAvc3JjXFxhcHBcXHN1cGVyQWRtaW5cXHZpZXctb3JkZXJzXFx2aWV3LW9yZGVycy5wYWdlLnNjc3MiLCJzcmMvYXBwL3N1cGVyQWRtaW4vdmlldy1vcmRlcnMvdmlldy1vcmRlcnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQ0NKOztBRENBO0VBQ0ksVUFBQTtBQ0VKOztBREFBO0VBQ0ksMkJBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0FDR0o7O0FEREE7RUFDSSxZQUFBO0FDSUoiLCJmaWxlIjoic3JjL2FwcC9zdXBlckFkbWluL3ZpZXctb3JkZXJzL3ZpZXctb3JkZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdWNjZXNzIHtcclxuICAgIGNvbG9yOiBncmVlblxyXG59XHJcbi5mYWlsIHtcclxuICAgIGNvbG9yOnJlZFxyXG59XHJcbi5pbnB1dCB7XHJcbiAgICBib3JkZXI6IC41cHggc29saWQgcmdiKDIxOSwgMTU4LCA3KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgIGNvbG9yOnJnYig4LCA4LCA4KTtcclxufVxyXG4uZW5kMTF7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn0iLCIuc3VjY2VzcyB7XG4gIGNvbG9yOiBncmVlbjtcbn1cblxuLmZhaWwge1xuICBjb2xvcjogcmVkO1xufVxuXG4uaW5wdXQge1xuICBib3JkZXI6IDAuNXB4IHNvbGlkICNkYjllMDc7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBjb2xvcjogIzA4MDgwODtcbn1cblxuLmVuZDExIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufSJdfQ== */\";","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { LoadingController } from '@ionic/angular';\r\n//import * as moment from 'moment';\r\nimport { Storage } from '@ionic/storage';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { NullVisitor } from '@angular/compiler/src/render3/r3_ast';\r\n\r\n@Component({\r\n  selector: 'app-myshops',\r\n  templateUrl: './view-orders.page.html',\r\n  styleUrls: ['./view-orders.page.scss'],\r\n})\r\nexport class OrderPageOwner implements OnInit {\r\n\r\n  orders: any\r\n  today: any;\r\n  searchQuery: any;\r\n  userId;\r\n  private allorders = [];\r\n  orderid: number;\r\n  type = this.route.snapshot.paramMap.get('type');\r\n  NotOrderFound: boolean = false;\r\n\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    public orderservice: OrderService,\r\n    public loadingController: LoadingController,\r\n  //  private events: Events,\r\n    private storage: Storage,\r\n    private toastService: ToastService\r\n  ) {\r\n   // this.today = moment().format('YYYY-MM-DD');\r\n  }\r\n\r\n  async ngOnInit()\r\n{\r\n\r\n    \r\n    this.Allorders();\r\n}\r\n\r\nasync Allorders()\r\n{\r\n  const loading = await this.loadingController.create({ message: \"Loading\" });\r\n  await loading.present();\r\n   await this.orderservice.Allorders().subscribe(\r\n      res=>{\r\n        loading.dismiss();\r\n        this.orders = res;\r\n        this.allorders=res;\r\n        console.warn(res);\r\n        err => {\r\n          console.log(err);\r\n          loading.dismiss();\r\n        }   \r\n         });\r\n  \r\n}\r\nasync Singleorders(id)\r\n{\r\n  console.log(id);\r\n  const loading = await this.loadingController.create({ message: \"Loading\" });\r\n  await loading.present();\r\n  if(!id)\r\n  {\r\n    loading.dismiss();\r\n    this.doRefresh(event);\r\n  }\r\n else{\r\n  await this.orderservice.GetOrder(id).subscribe(\r\n  res => {\r\n    loading.dismiss();\r\n    if (res) {\r\n     this.orders =[res];\r\n    } else {\r\n     \r\n    }\r\n  },\r\n  err => {\r\n    loading.dismiss();\r\n     this.toastService.create(\"Invalid Order ID\", \"danger\");\r\n  }\r\n);\r\n       \r\n}\r\n}\r\n  doRefresh(event) {\r\n    console.log('Begin async operation');\r\n    this.ngOnInit();\r\n    setTimeout(() => {\r\n      console.log('Async operation has ended');\r\n      event.target.complete();\r\n    }, 1000);\r\n  }\r\n\r\n\r\n  search() {\r\n    console.log(\"Order\", this.orders)\r\n    this.orders = this.allorders.filter(Item => Item.id.toLowerCase().includes(this.searchQuery.toLowerCase()));  \r\n    if(this.orders.length == 0)\r\n    {\r\n      this.NotOrderFound = true;\r\n    }\r\n    else\r\n    this.NotOrderFound = false;\r\n\r\n  }\r\n}\r\n\r\n  \r\n"]}