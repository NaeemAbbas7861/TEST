{"version":3,"sources":["./src/app/passwordreset/passwordreset.page.html","./src/app/passwordreset/passwordreset.module.ts","./src/app/passwordreset/passwordreset.page.scss","./src/app/passwordreset/passwordreset.page.ts","./src/app/services/toast.service.ts"],"names":[],"mappings":"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","file":"passwordreset-passwordreset-module-es2015.js","sourcesContent":["export default \"<!-- /**\\r\\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\\r\\n *\\r\\n * Copyright © 2018-present Enappd. All rights reserved.\\r\\n *\\r\\n * This source code is licensed as per the terms found in the\\r\\n * LICENSE.md file in the root directory of this source .\\r\\n */ -->\\r\\n\\r\\n\\r\\n  <ion-header padding style=\\\"background: black;\\\" class=\\\"mybg head\\\">\\r\\n    <ion-toolbar color=\\\"dark\\\">\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-back-button   style=\\\"color: white\\\" defaultHref=\\\"/\\\" slot=\\\"end\\\"> </ion-back-button>\\r\\n      </ion-buttons>\\r\\n    </ion-toolbar>  \\r\\n    <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"background: black; height: 140px;\\\">\\r\\n      <ion-img src=\\\"assets/images/logo.png\\\" class=\\\"head-image\\\"></ion-img>\\r\\n    </ion-row>\\r\\n  </ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding \\\">\\r\\n  <ion-text><h3  class=\\\"title ion-no-margin ion-margin-bottom ion-text-center\\\" style=\\\"font-family: 'Times New Roman', Times, serif; font-weight: bold; font-size: 18px;\\\">Forgot your password?</h3></ion-text>\\r\\n  <ion-grid>\\r\\n    \\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <form [formGroup]=\\\"fg\\\">\\r\\n        <ion-label><ion-text class=\\\"small\\\" style=\\\"font-family: 'Times New Roman', Times, serif;  font-size: 16px;\\\">Type your Contact Number</ion-text></ion-label><br>\\r\\n        <ion-input  type=\\\"text\\\" placeholder=\\\"Enter Contact Number\\\" formControlName=\\\"MobileNumber\\\" [(ngModel)]=\\\"email\\\" class=\\\"input ion-clearInput ion-padding-horizontal ion-padding-top\\\" ></ion-input>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validation_messages.mobileNumber\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"fg.get('MobileNumber').hasError(validation.type) && (fg.get('MobileNumber').dirty || fg.get('MobileNumber').touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"mycolor1\\\" [disabled]=\\\"!fg.valid\\\" (click)=\\\"reset()\\\"><strong class=\\\"white\\\">Reset Password</strong></ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","/**\r\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\r\n *\r\n * Copyright © 2018-present Enappd. All rights reserved.\r\n *\r\n * This source code is licensed as per the terms found in the\r\n * LICENSE.md file in the root directory of this source .\r\n * \r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { PasswordresetPage } from './passwordreset.page';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PasswordresetPage\r\n  },\r\n  { path: ':id/otp', loadChildren: './otp_verify/otp_verifyreset.module#OtpverifyresetPageModule' },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PasswordresetPage]\r\n})\r\nexport class PasswordresetPageModule {}\r\n","export default \".head {\\n  min-height: 21vh !important;\\n}\\n\\n.head-image {\\n  background-size: contain;\\n  width: 180px;\\n  align-self: center;\\n}\\n\\n.small {\\n  font-size: 15px;\\n  color: black;\\n}\\n\\n.white {\\n  color: white;\\n}\\n\\n.input {\\n  background-color: #f0f0f0;\\n  border: 1px solid #d2d2d2;\\n  border-radius: 9px;\\n  font-size: 0.9em !important;\\n  margin-top: 10px;\\n}\\n\\n.title {\\n  font-size: 18px;\\n  color: #070707;\\n}\\n\\n.error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFzc3dvcmRyZXNldC9EOlxcZ2l0a3VpY2tzYXZlXFxtdWx0aXN0b3JlLW1vYmlsZS1hcHAvc3JjXFxhcHBcXHBhc3N3b3JkcmVzZXRcXHBhc3N3b3JkcmVzZXQucGFnZS5zY3NzIiwic3JjL2FwcC9wYXNzd29yZHJlc2V0L3Bhc3N3b3JkcmVzZXQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksMkJBQUE7QUNDSjs7QURDQTtFQUNJLHdCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FDRUo7O0FEQUE7RUFDSSxlQUFBO0VBQ0EsWUFBQTtBQ0dKOztBREFBO0VBQ0ksWUFBQTtBQ0dKOztBRERBO0VBQ0kseUJBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsMkJBQUE7RUFDQSxnQkFBQTtBQ0lKOztBREZBO0VBQ0ksZUFBQTtFQUNBLGNBQUE7QUNLSjs7QURGQTtFQUNJLFVBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQ0tKIiwiZmlsZSI6InNyYy9hcHAvcGFzc3dvcmRyZXNldC9wYXNzd29yZHJlc2V0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkIHtcclxuICAgIG1pbi1oZWlnaHQ6IDIxdmggIWltcG9ydGFudDtcclxufVxyXG4uaGVhZC1pbWFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgICB3aWR0aDogMTgwcHg7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbn1cclxuLnNtYWxsIHtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbiAgICBcclxufVxyXG4ud2hpdGUge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcbi5pbnB1dCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAyNDAsIDI0MCk7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjEwLCAyMTAsIDIxMCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA5cHg7XHJcbiAgICBmb250LXNpemU6IC45ZW0gIWltcG9ydGFudDtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGNvbG9yOiAgIzA3MDcwNztcclxufVxyXG5cclxuLmVycm9yLW1lc3NhZ2Uge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICB9XHJcbiAgIiwiLmhlYWQge1xuICBtaW4taGVpZ2h0OiAyMXZoICFpbXBvcnRhbnQ7XG59XG5cbi5oZWFkLWltYWdlIHtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICB3aWR0aDogMTgwcHg7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cblxuLnNtYWxsIHtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi53aGl0ZSB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmlucHV0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QyZDJkMjtcbiAgYm9yZGVyLXJhZGl1czogOXB4O1xuICBmb250LXNpemU6IDAuOWVtICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgY29sb3I6ICMwNzA3MDc7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn0iXX0= */\";","/**\r\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\r\n *\r\n * Copyright © 2018-present Enappd. All rights reserved.\r\n *\r\n * This source code is licensed as per the terms found in the\r\n * LICENSE.md file in the root directory of this source .\r\n * \r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FunctionsService } from '../functions.service';\r\nimport { MenuController } from '@ionic/angular';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { LoadingController } from \"@ionic/angular\";\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-passwordreset',\r\n  templateUrl: './passwordreset.page.html',\r\n  styleUrls: ['./passwordreset.page.scss'],\r\n})\r\nexport class PasswordresetPage implements OnInit {\r\n\r\n  email = \"\";\r\n  id: any;\r\n  fg: FormGroup;\r\n  constructor(private fun: FunctionsService, private menuCtrl: MenuController,private loginservice: LoginService,\r\n    private storage: Storage ,private router: Router, private toasterservice: ToastService,\r\n    public loadingController: LoadingController, private sharedservice: SharedService,private formBuilder: FormBuilder) { \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fg = this.formBuilder.group({\r\n      MobileNumber: new FormControl(\r\n        \"\",\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(\"^0[03][0-9]{9}$\")\r\n        ])\r\n      ),\r\n    });\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    this.menuCtrl.enable(false, 'start');\r\n    this.menuCtrl.enable(false, 'end');\r\n  }\r\n\r\n  async reset(){\r\n    // if(this.fun.validateEmail(this.email)){\r\n      this.fg.value.MobileNumber = this.fg.value.MobileNumber.substring(1,11); \r\n        const loading = await this.loadingController.create({ message: \"Loading\" });\r\n        await loading.present();\r\n        \r\n            await this.loginservice.forgotPassword((JSON.stringify(this.fg.value.MobileNumber))) //(JSON.stringify(this.fg.value.MobileNumber))\r\n            .subscribe(res => {\r\n              if (res) { \r\n               this.id = res;\r\n               console.log(this.id);\r\n                loading.dismiss();\r\n                this.toasterservice.create(\"Code is sent to your email and number\", 'success');\r\n                this.router.navigate(['passwordreset/'+res+'/otp']);\r\n              }\r\n              else {\r\n                loading.dismiss();\r\n                this.toasterservice.create(\"error occored\" , 'danger');\r\n              }\r\n            }, (err) => {\r\n              loading.dismiss();\r\n              this.toasterservice.create(\"Please enter a valid number\", 'danger');\r\n            });\r\n    }\r\n    // else{\r\n    //   this.fun.presentToast('Wrong Input!', true, 'bottom', 2100);\r\n    // }\r\n  \r\n  validation_messages = {   \r\n    mobileNumber: [\r\n      { type: \"pattern\", message: \"Number is like 03xxxxxxxxx and length must be 11\" }\r\n    ]\r\n  };\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  toast: HTMLIonToastElement;\r\n\r\n  constructor(public toastCtrl: ToastController) { }\r\n\r\n  async create(message: string, color = \"success\", ok = false, duration = 3000) {\r\n    if (this.toast) {\r\n      this.toast.dismiss();\r\n    }\r\n\r\n    this.toast = await this.toastCtrl.create({\r\n      message,\r\n      color: color,\r\n      duration: ok ? null : duration,\r\n      position: 'bottom',\r\n      // showCloseButton: ok,\r\n      // closeButtonText: 'OK'\r\n    });\r\n    this.toast.present();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}