{"version":3,"sources":["webpack:///src/app/shopOwner/shop/add/addshop.page.html","webpack:///src/app/services/shop.service.ts","webpack:///src/app/shopOwner/shop/add/addshop.module.ts","webpack:///src/app/shopOwner/shop/add/addshop.page.scss","webpack:///src/app/shopOwner/shop/add/addshop.page.ts"],"names":["ShopService","http","authenticationState","API_SHOP","BASE_URL","API_PRODUCT","API_BANK","lat","lng","url","get","httpOptions","pipe","extractData","handleError","groupid","id","data","put","post","providedIn","AddShopPageModule","imports","forChild","path","component","declarations","providers","entryComponents","AddShopPage","router","shopservice","sharedservice","groupservice","loadingController","toastService","formBuilder","geolocation","fileChooser","file","filePath","transfer","ref","zone","resourceURL","RESOURCE_URL","validation_messages","Name","type","message","lastName","NDN_Number","mobileNumber","Address","Type","AccountType","Radious","AccountNumber","BankName","GoogleAutocomplete","google","maps","places","AutocompleteService","autocomplete","input","autocompleteItems","getPlacePredictions","predictions","status","console","log","run","forEach","prediction","push","item","myMarker","setMap","geocoder1","Geocoder","geocode","place_id","results","Marker","position","geometry","location","map","draggable","setCenter","selectedPlace","formatted_address","fg","controls","setValue","event","addListener","latitude","getPosition","longitude","getAddressFromMarker","group","required","compose","pattern","min","value","create","getGroups","GetBankList","getUserLocation","target","e","preventDefault","open","then","uri","resolveNativePath","uploadingbanner","resolveLocalFilesystemUrl","fileInfo","files","success","size","filesName","name","options","fileName","fileTransfer","upload","dbpath","JSON","parse","response","dbPath","detectChanges","err","uploadinglogo","user","sid","Latitude","Longitude","obj","trim","length","updateValueAndValidity","DeliveryRadius","price","Logo","loading","present","PostShop","subscribe","res","dismiss","navigate","getCurrentPosition","maximumAge","timeout","enableHighAccuracy","resp","coords","loadMap","error","Map","mapElement","nativeElement","center","zoom","markLat","markLong","formGroup","latlng","LatLng","geocoder","GeocoderStatus","OK","strAddress","GetGroups","groups","Message","GetBank","banklist","selector","template"],"mappings":"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","file":"add-addshop-module-es5.js","sourcesContent":["export default \"<!-- /**\\r\\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\\r\\n *\\r\\n * Copyright © 2018-present Enappd. All rights reserved.\\r\\n *\\r\\n * This source code is licensed as per the terms found in the\\r\\n * LICENSE.md file in the root directory of this source .\\r\\n */ -->\\r\\n\\r\\n<ion-header class=\\\"mybg\\\">\\r\\n  <ion-toolbar color=\\\"mytheme\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: black;\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\" style=\\\"color: black;\\\">Add Shop</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button style=\\\"color: black;\\\" defaultHref=\\\"/\\\" slot=\\\"end\\\"> </ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <ion-grid>\\r\\n    <form [formGroup]=\\\"fg\\\">\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-label>Shop Name</ion-label>\\r\\n          <ion-input type=\\\"text\\\" formControlName=\\\"Name\\\" placeholder=\\\"Shop Name\\\" class=\\\"input ion-padding-horizontal\\\">\\r\\n          </ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Name\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('Name').hasError(validation.type) && (fg.get('Name').dirty || fg.get('Name').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n\\r\\n      <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n        <ion-col>\\r\\n          <ion-label>Contact</ion-label>\\r\\n          <ion-input type=\\\"text\\\" formControlName=\\\"Contact\\\" placeholder=\\\"Contact\\\" class=\\\"input ion-padding-horizontal\\\">\\r\\n          </ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.mobileNumber\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('Contact').hasError(validation.type) && (fg.get('Contact').dirty || fg.get('Contact').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n        <ion-col>\\r\\n          <ion-label>NTN Number</ion-label>\\r\\n          <ion-input type=\\\"number\\\" formControlName=\\\"NDN_Number\\\" placeholder=\\\"NTN Number\\\"\\r\\n            class=\\\"input ion-padding-horizontal\\\" minLength=\\\"13\\\"></ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.NDN_Number\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('NDN_Number').hasError(validation.type) && (fg.get('NDN_Number').dirty  &&  fg.get('NDN_Number').minLength || fg.get('NDN_Number').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Account Type</ion-label>\\r\\n            <ion-select name=\\\"PaymentMethod\\\" formControlerName=\\\"AccountType\\\"\\r\\n              (ionChange)=\\\"AccountTypeForPayment($event)\\\">\\r\\n              <ion-select-option value=\\\"Bank\\\">Bank </ion-select-option>\\r\\n              <ion-select-option value=\\\"EasyPaisa\\\">EasyPaisa </ion-select-option>\\r\\n              <ion-select-option value=\\\"JazzCash\\\">JazzCash </ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Type\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('AccountType').hasError(validation.type) && (fg.get('AccountType').dirty || fg.get('AccountType').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col *ngIf=\\\"fg.value.AccountType == 'Bank'\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Select Bank</ion-label>\\r\\n            <ion-select name=\\\"bank\\\" formControlerName=\\\"BankName\\\" (ionChange)=\\\"BankName($event)\\\">\\r\\n              <ion-select-option *ngFor=\\\"let bank of banklist\\\"  value=\\\"{{bank.bankName}}\\\">{{bank.bankName}}\\r\\n              </ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.BankName\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('BankName').hasError(validation.type) && (fg.get('BankName').dirty || fg.get('BankName').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-label>Account Number/ Phone Number</ion-label>\\r\\n          <ion-input type=\\\"text\\\" formControlName=\\\"AccountNumber\\\" placeholder=\\\"Account Number/ Phone Number\\\"\\r\\n            class=\\\"input ion-padding-horizontal\\\"></ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.AccountNumber\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('AccountNumber').hasError(validation.type) && (fg.get('AccountNumber').dirty || fg.get('AccountNumber').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n        <ion-col>\\r\\n          <ion-label>Delivery Radius in kilometers</ion-label>\\r\\n          <ion-input type=\\\"number\\\" formControlName=\\\"DeliveryRadius\\\" placeholder=\\\"Radius\\\"\\r\\n            class=\\\"input ion-padding-horizontal\\\"></ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Radious\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('DeliveryRadius').hasError(validation.type) && (fg.get('DeliveryRadius').dirty  || fg.get('DeliveryRadius').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <!-- <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n    <ion-col>\\r\\n      <ion-checkbox checked=\\\"true\\\" formControlName=\\\"IsReturnable\\\"  ></ion-checkbox>\\r\\n    <ion-label>  Allow Products Exchange</ion-label> \\r\\n    </ion-col>\\r\\n  </ion-row> -->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Shop Category</ion-label>\\r\\n            <ion-select name=\\\"GroupId\\\" formControlName=\\\"GroupId\\\">\\r\\n              <ion-select-option *ngFor=\\\"let group of groups\\\" value=\\\"{{group.id}}\\\">{{group.name}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Type\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('GroupId').hasError(validation.type) && (fg.get('GroupId').dirty || fg.get('GroupId').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"ion-align-items-center\\\">\\r\\n        <!-- <ion-col>\\r\\n     <ion-button expand=\\\"block\\\"   color=\\\"mycolor1\\\" (click)=\\\"uploadPhoto('banner')\\\"><strong class=\\\"white ion-text-capitalize\\\">Banner</strong></ion-button> \\r\\n    </ion-col> -->\\r\\n        <ion-col>\\r\\n          <ion-button expand=\\\"block\\\" color=\\\"mycolor1\\\" (click)=\\\"uploadPhoto('logo')\\\"><strong\\r\\n              class=\\\"white ion-text-capitalize\\\">\\r\\n              <ion-text color=\\\"light\\\"\\r\\n                style=\\\"font-style: italic;font-family: 'Times New Roman', serif; font-size: 16px;\\\">Logo</ion-text>\\r\\n            </strong></ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <!-- <ion-col>\\r\\n      <ion-spinner *ngIf=\\\"uploadingbanner\\\" color=\\\"mycolor1\\\"></ion-spinner>\\r\\n      <ion-img *ngIf=\\\"fg.value.Banner\\\" [src]=\\\"resourceURL + fg.value.Banner\\\" alt=\\\"Banner Image\\\"></ion-img>\\r\\n    </ion-col> -->\\r\\n        <ion-col>\\r\\n          <ion-spinner *ngIf=\\\"uploadinglogo\\\" color=\\\"mycolor1\\\"></ion-spinner>\\r\\n          <ion-img *ngIf=\\\"fg.value.Logo\\\" [src]=\\\"resourceURL + fg.value.Logo\\\" alt=\\\"Logo Image\\\"></ion-img>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row class=\\\"ion-padding-vertical\\\">\\r\\n        <ion-col>\\r\\n          <ion-label>Shop Address</ion-label>\\r\\n          <ion-input type=\\\"text\\\" formControlName=\\\"Address\\\" disabled placeholder=\\\"Address\\\"\\r\\n            class=\\\"input ion-padding-horizontal\\\">\\r\\n          </ion-input>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.Address\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"fg.get('Address').hasError(validation.type) && (fg.get('Address').dirty || fg.get('Address').touched)\\\">\\r\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-label class=\\\"ion-text-justify\\\" style=\\\"padding-left: 10px; padding-right: 10px; padding-bottom: 15px; \\\">\\r\\n          <strong>Note: </strong>Drag marker on map to select\\r\\n          the address or type in searchbox below to look for your address</ion-label>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item style=\\\"min-height: 300px;\\\">\\r\\n            <div #mapElement class=\\\"map\\\" style=\\\"min-height: 300px;\\\"></div>\\r\\n          </ion-item>\\r\\n          <ion-button [disabled]=\\\"fg.invalid\\\" expand=\\\"block\\\" (click)=\\\"AddShop()\\\" color=\\\"mycolor1\\\"><strong class=\\\"white\\\">\\r\\n              <ion-text color=\\\"light\\\" style=\\\"font-size: 16px; font-family: 'Times New Roman', serif;\\\">Add</ion-text>\\r\\n            </strong></ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      \\r\\n    </form>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-searchbar [value]=\\\"selectedPlace\\\" [(ngModel)]=\\\"autocomplete.input\\\" (ionInput)=\\\"updateSearchResults()\\\"\\r\\n      placeholder=\\\"Search for a place\\\">\\r\\n    </ion-searchbar>\\r\\n  </ion-toolbar>\\r\\n  <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\r\\n    <ion-item *ngFor=\\\"let item of autocompleteItems\\\" tappable (click)=\\\"selectSearchResult(item)\\\">\\r\\n      {{ item.description }}\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-footer>\";","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError,map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopService extends BaseService {\r\n\r\n  private authenticationState = new BehaviorSubject(false);\r\n  private readonly API_SHOP = `${environment.BASE_URL}shop/`;\r\n  private readonly API_PRODUCT = `${environment.BASE_URL}product/`\r\n  private readonly API_BANK = `${environment.BASE_URL}bank/`\r\n  constructor(\r\n    protected http: HttpClient\r\n  ) { super(http); }\r\n\r\n\r\n  GetShops(lat,lng): Observable<any> {\r\n    const url = `${this.API_SHOP}${lat}/${lng}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  GetShopsByCategory(groupid,lat,lng): Observable<any> {\r\n    const url = `${this.API_SHOP}${lat}/${lng}/${groupid}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetSingleShopByName(): Observable<any> {\r\n    const url = `${this.API_SHOP}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  \r\n  getApprovedShops(): Observable<any> {\r\n    const url = `${this.API_SHOP}verified`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  getUnApprovedShops(): Observable<any> {\r\n    const url = `${this.API_SHOP}unverfied`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  getShopsByUser(id): Observable<any> {\r\n    const url = `${this.API_SHOP}user/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  ApproveShop(id , data): Observable<any> {\r\n    const url = `${this.API_SHOP}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  UpdateShop(id , data): Observable<any> {\r\n    const url = `${this.API_SHOP}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  UpdateProduct(id , data): Observable<any> {\r\n    const url = `${this.API_PRODUCT}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  GetShopProducts(id): Observable<any> {\r\n    const url = `${this.API_SHOP}${id}/products`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  \r\n  GetShopByProducts(id): Observable<any> {\r\n    const url = `${this.API_SHOP}products/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetShopByuserProducts(id): Observable<any> {\r\n    const url = `${this.API_PRODUCT}userProduct/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  \r\n\r\n  GetShop(id): Observable<any> {\r\n    const url = `${this.API_SHOP}${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  \r\n  \r\n  GetProductDetail(id): Observable<any> {\r\n    const url = `${this.API_PRODUCT}${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  PostShop(data): Observable<any> {\r\n    const url = `${this.API_SHOP}`;\r\n    return this.http.post(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  PostProduct(data): Observable<any> {\r\n    const url = `${this.API_PRODUCT}`;\r\n    return this.http.post(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n  GetProduct(): Observable<any> {\r\n    const url = `${this.API_PRODUCT}`;\r\n    return this.http.get(url,  this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n  DeleteProductbyId(id): Observable<any> {\r\n    const url =`${this.API_PRODUCT}${id}`;\r\n    return this.http.delete(url,  this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  DeleteShop(id): Observable<any> {\r\n    const url =`${this.API_SHOP}${id}`;\r\n    return this.http.delete(url,  this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  GetBank(): Observable<any> {\r\n    const url = `${this.API_BANK}`;\r\n    return this.http.get(url,  this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n}\r\n","/**\r\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\r\n *\r\n * Copyright © 2018-present Enappd. All rights reserved.\r\n *\r\n * This source code is licensed as per the terms found in the\r\n * LICENSE.md file in the root directory of this source .\r\n * \r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { AddShopPage } from './addshop.page';\r\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\r\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\r\nimport { FileChooser } from '@ionic-native/file-chooser/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { FilePath } from '@ionic-native/file-path/ngx';\r\nimport { FileTransfer} from '@ionic-native/file-transfer/ngx';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: AddShopPage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [AddShopPage\r\n  ],\r\n  providers:[Geolocation , FileChooser , File ,FilePath, FileTransfer],\r\n  entryComponents: []\r\n})\r\nexport class AddShopPageModule {}\r\n","export default \".imgdiv {\\n  width: 80%;\\n  height: 60%;\\n}\\n\\n.img1 {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.small a {\\n  font-size: 13px;\\n  text-decoration: unset !important;\\n}\\n\\n.input {\\n  background-color: #f0f0f0;\\n  border: 1px solid #d2d2d2;\\n  border-radius: 9px;\\n  font-size: 0.9em !important;\\n}\\n\\n.white {\\n  color: white;\\n}\\n\\n.title {\\n  font-size: 18px;\\n}\\n\\n.logo {\\n  width: 1.25em !important;\\n}\\n\\n.center {\\n  text-align: center;\\n}\\n\\n.map {\\n  height: 100%;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvcE93bmVyL3Nob3AvYWRkL0Q6XFxnaXRrdWlja3NhdmVcXG11bHRpc3RvcmUtbW9iaWxlLWFwcC9zcmNcXGFwcFxcc2hvcE93bmVyXFxzaG9wXFxhZGRcXGFkZHNob3AucGFnZS5zY3NzIiwic3JjL2FwcC9zaG9wT3duZXIvc2hvcC9hZGQvYWRkc2hvcC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxVQUFBO0VBQ0EsV0FBQTtBQ0FKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFSTtFQUNJLGVBQUE7RUFDQSxpQ0FBQTtBQ0NSOztBREVBO0VBQ0kseUJBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsMkJBQUE7QUNDSjs7QURDQTtFQUNJLFlBQUE7QUNFSjs7QURBQTtFQUNJLGVBQUE7QUNHSjs7QUREQTtFQUNJLHdCQUFBO0FDSUo7O0FEREE7RUFDSSxrQkFBQTtBQ0lKOztBREZBO0VBQ0ksWUFBQTtFQUNBLFdBQUE7QUNLSiIsImZpbGUiOiJzcmMvYXBwL3Nob3BPd25lci9zaG9wL2FkZC9hZGRzaG9wLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uaW1nZGl2e1xyXG4gICAgd2lkdGg6ODAlO1xyXG4gICAgaGVpZ2h0OjYwJTtcclxufVxyXG4uaW1nMXtcclxuICAgIHdpZHRoOjEwMCU7XHJcbiAgICBoZWlnaHQ6MTAwJTtcclxufVxyXG4uc21hbGwge1xyXG4gICAgYXtcclxuICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bnNldCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG59XHJcbi5pbnB1dCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAyNDAsIDI0MCk7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjEwLCAyMTAsIDIxMCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA5cHg7XHJcbiAgICBmb250LXNpemU6IC45ZW0gIWltcG9ydGFudDtcclxufVxyXG4ud2hpdGV7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxufVxyXG4ubG9nbyB7XHJcbiAgICB3aWR0aDogMS4yNWVtICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5jZW50ZXJ7XHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxufVxyXG4ubWFwIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICIsIi5pbWdkaXYge1xuICB3aWR0aDogODAlO1xuICBoZWlnaHQ6IDYwJTtcbn1cblxuLmltZzEge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc21hbGwgYSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bnNldCAhaW1wb3J0YW50O1xufVxuXG4uaW5wdXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDJkMmQyO1xuICBib3JkZXItcmFkaXVzOiA5cHg7XG4gIGZvbnQtc2l6ZTogMC45ZW0gIWltcG9ydGFudDtcbn1cblxuLndoaXRlIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4udGl0bGUge1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbi5sb2dvIHtcbiAgd2lkdGg6IDEuMjVlbSAhaW1wb3J0YW50O1xufVxuXG4uY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubWFwIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\";","/**\r\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\r\n *\r\n * Copyright © 2018-present Enappd. All rights reserved.\r\n *\r\n * This source code is licensed as per the terms found in the\r\n * LICENSE.md file in the root directory of this source .\r\n * \r\n */\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef, NgZone } from '@angular/core'\r\nimport { ShopService } from 'src/app/services/shop.service';\r\nimport { GroupService } from 'src/app/services/group.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingController } from \"@ionic/angular\";\r\nimport { ToastService } from \"src/app/services/toast.service\";\r\nimport { SharedService } from \"src/app/services/shared.service\";\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpEventType } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\r\n//import { AnyTxtRecord } from 'dns';\r\n// import { ImagePicker , ImagePickerOptions } from '@ionic-native/image-picker/ngx';\r\nimport { FileChooser } from '@ionic-native/file-chooser/ngx';\r\nimport { File, FileEntry } from '@ionic-native/file/ngx';\r\nimport { FilePath } from '@ionic-native/file-path/ngx';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { google } from '@google/maps';\r\ndeclare var google;\r\n\r\n@Component({\r\n  selector: 'app-addshop',\r\n  templateUrl: 'addshop.page.html',\r\n  styleUrls: ['addshop.page.scss'],\r\n})\r\nexport class AddShopPage implements OnInit {\r\n\r\n  fg: FormGroup;\r\n  imagepath: string;\r\n  groups: any;\r\n  banklist: any;\r\n  uploadProgress: number;\r\n  resourceURL = environment.RESOURCE_URL;\r\n  myMarker;\r\n  uploadinglogo;\r\n  uploadingbanner;\r\n  map;\r\n  latitude: any;\r\n  longitude: any;\r\n  @ViewChild(\"mapElement\", { static: true }) mapElement;\r\n\r\n  GoogleAutocomplete: google.maps.places.AutocompleteService;\r\n  autocomplete: { input: string; };\r\n  autocompleteItems: any[];\r\n  location: any;\r\n  placeid: any;\r\n  selectedPlace: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private shopservice: ShopService,\r\n    private sharedservice: SharedService,\r\n    private groupservice: GroupService,\r\n    public loadingController: LoadingController,\r\n    private toastService: ToastService,\r\n    private formBuilder: FormBuilder,\r\n    private http: HttpClient,\r\n    private geolocation: Geolocation,\r\n    private fileChooser: FileChooser,\r\n    private file: File,\r\n    private filePath: FilePath,\r\n    private transfer: FileTransfer,\r\n    private ref: ChangeDetectorRef,\r\n    public zone: NgZone) {\r\n\r\n    this.GoogleAutocomplete = new google.maps.places.AutocompleteService();\r\n    this.autocomplete = { input: '' };\r\n    this.autocompleteItems = [];\r\n  }\r\n\r\n  updateSearchResults() {\r\n    if (this.autocomplete.input == '') {\r\n      this.autocompleteItems = [];\r\n      return;\r\n    }\r\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input },\r\n      (predictions, status) => {\r\n        console.log(status);\r\n        this.autocompleteItems = [];\r\n        this.zone.run(() => {\r\n          predictions.forEach((prediction) => {\r\n            this.autocompleteItems.push(prediction);\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  selectSearchResult(item) {\r\n\r\n    this.myMarker.setMap(null);\r\n    this.autocompleteItems = [];\r\n    var geocoder1 = new google.maps.Geocoder();\r\n\r\n    geocoder1.geocode({ 'placeId': item.place_id }, (results, status) => {\r\n      if (status === 'OK' && results[0]) {\r\n        this.myMarker = new google.maps.Marker({\r\n          position: results[0].geometry.location,\r\n          map: this.map,\r\n          draggable: true\r\n        });\r\n\r\n        this.map.setCenter(this.myMarker.position);\r\n        this.myMarker.setMap(this.map);\r\n        this.selectedPlace = \"\" + results[0].formatted_address;\r\n        this.fg.controls.Address.setValue(\"\" + results[0].formatted_address);\r\n\r\n        google.maps.event.addListener(this.myMarker, \"dragend\", () => {\r\n          this.latitude = this.myMarker.getPosition().lat();\r\n          this.longitude = this.myMarker.getPosition().lng();\r\n          this.getAddressFromMarker(this.latitude, this.longitude, this.fg)\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.fg = this.formBuilder.group({\r\n      'Name': [null, [Validators.required]],\r\n      'GroupId': [null, Validators.required],\r\n      'UserId': [null],\r\n      'Contact': [null, Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\"^0[03][0-9]{9}$\")\r\n      ])],\r\n      'AccountType': [null, Validators.required],\r\n      'BankName': [null],\r\n      'AccountNumber': [null, Validators.required],\r\n      'NDN_Number': [null, [Validators.required, Validators.pattern(\"[0-9]{13}$\")]],\r\n      'Latitude': [null],\r\n      'Longitude': [null],\r\n      'DeliveryRadius': [null, Validators.compose([Validators.required, Validators.min(10)])],\r\n      'Address': [null, Validators.required],\r\n      'IsReturnable': [null],\r\n      'IsVerified': [false],\r\n      'IsDisabled': [false],\r\n      'Logo': [null, Validators.required],\r\n      // 'Banner': [null],\r\n    });\r\n    this.fg.value.Name = ' ';\r\n    this.fg.value.NDN_Number = ' ';\r\n    this.fg.value.AccountNumber = ' ';\r\n    this.fg.value.Address = ' ';\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.toastService.create(\"Kindly Open your Gps location then add Shop\", \"success\");\r\n    this.getGroups();\r\n    this.GetBankList();\r\n    this.getUserLocation();\r\n  }\r\n  BankAccount(event) {\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  AccountTypeForPayment(event) {\r\n    this.fg.value.AccountType = event.target.value;\r\n    this.fg.controls['AccountType'].setValue(event.target.value);\r\n    // if(this.fg.value.AccountType= 'Bank')\r\n    // {\r\n    //   this.fg.controls['BankName'].setValidators(Validators.required);\r\n    // }\r\n    // this.fg.value.AccountType= event.target.value;\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  BankName(event) {\r\n    this.fg.controls['BankName'].setValue(event.target.value);\r\n    console.log(event.target.value);\r\n\r\n  }\r\n\r\n  preventDefault(e) {\r\n    e.preventDefault();\r\n  }\r\n  uploadPhoto(type) {\r\n\r\n    this.fileChooser.open().then(async uri => {\r\n      console.log(uri);\r\n      await this.filePath.resolveNativePath(uri).then(filePath => {\r\n        //this.filesPath = filePath;\r\n        if (type == 'banner') {\r\n          this.uploadingbanner = true;\r\n          this.file.resolveLocalFilesystemUrl(filePath).then(fileInfo => {\r\n            let files = fileInfo as FileEntry;\r\n            files.file(async success => {\r\n              //this.fileType   = success.type;\r\n              if (success.size < 204800) {\r\n                let filesName = success.name;\r\n                console.log(filesName);\r\n                let options: FileUploadOptions = {\r\n                  fileName: filesName\r\n                }\r\n                const fileTransfer: FileTransferObject = this.transfer.create();\r\n                await fileTransfer.upload(uri, environment.BASE_URL + 'upload', options)\r\n                  .then((data) => {\r\n                    // success\r\n                    // console.log(data);\r\n                    this.toastService.create(\"successfully Uploaded\");\r\n                    this.uploadingbanner = false;\r\n                    let dbpath = JSON.parse(data.response);\r\n                    this.fg.controls['Banner'].setValue(dbpath.dbPath);\r\n                    this.ref.detectChanges();\r\n                    //console.log(this.fg1.value.MonogramImage);\r\n                  }, (err) => {\r\n                    console.log(err)\r\n                    // error\r\n                  })\r\n              }\r\n              else\r\n                this.uploadingbanner = false;\r\n              this.toastService.create(\"File size must be less than 200 kb\", \"danger\");\r\n              this.uploadingbanner = false;\r\n            });\r\n          }, err => {\r\n            console.log(err);\r\n            throw err;\r\n          });\r\n        }\r\n        else if (type == 'logo') {\r\n          this.uploadinglogo = true;\r\n          this.file.resolveLocalFilesystemUrl(filePath).then(fileInfo => {\r\n            let files = fileInfo as FileEntry;\r\n            files.file(async success => {\r\n              //this.fileType   = success.type;\r\n              if (success.size < 204800) {\r\n                let filesName = success.name;\r\n                console.log(filesName);\r\n                let options: FileUploadOptions = {\r\n                  fileName: filesName\r\n                }\r\n                const fileTransfer: FileTransferObject = this.transfer.create();\r\n                await fileTransfer.upload(uri, environment.BASE_URL + 'upload', options)\r\n                  .then((data) => {\r\n                    // success\r\n                    // console.log(data);\r\n                    this.toastService.create(\"successfully Uploaded\");\r\n                    this.uploadinglogo = false;\r\n                    let dbpath = JSON.parse(data.response);\r\n                    this.fg.controls['Logo'].setValue(dbpath.dbPath);\r\n                    this.ref.detectChanges();\r\n                    //console.log(this.fg1.value.MonogramImage);\r\n                  }, (err) => {\r\n                    console.log(err)\r\n                    // error\r\n                  })\r\n              }\r\n              else {\r\n                this.uploadinglogo = false;\r\n                this.toastService.create(\"File size must be less than 200 kb\", \"danger\");\r\n              }\r\n            });\r\n          }, err => {\r\n            console.log(err);\r\n            throw err;\r\n          });\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n        throw err;\r\n      });\r\n    }, err => {\r\n      console.log(err);\r\n      throw err;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  pickimage() {\r\n    //  var options: ImagePickerOptions = { \r\n    //   maximumImagesCount: 2 ,\r\n    //   quality: 50};\r\n    // this.imagePicker.getPictures(options).then((results) => {\r\n    //   this.imagepath = results[0];\r\n    //   for (var i = 0; i < results.length; i++) {\r\n    //       console.log('Image URI: ' + results[i]);\r\n    //   }\r\n    // }, (err) => { });\r\n  }\r\n\r\n\r\n  async AddShop() {\r\n    this.fg.controls['UserId'].setValue(this.sharedservice.user.sid);\r\n    // this.fg.controls['Latitude'].setValue(this.Latitude);\r\n    // this.fg.controls['Longitude'].setValue(this.Longitude);\r\n    this.fg.value.Latitude = this.latitude;\r\n    this.fg.value.Longitude = this.longitude;\r\n    let obj = this.fg.value;\r\n    obj.Name = obj.Name.trim();\r\n    if (obj.Name.length == null && obj.Address == null && obj.AccountNumber == null) {\r\n      this.toastService.create(\"Please upload the shop photo\", 'danger');\r\n    }\r\n    obj.Address = obj.Address.trim();\r\n    obj.AccountNumber = obj.AccountNumber.trim();\r\n    if (obj.Name.length == 0 && obj.Address == 0 && obj.AccountNumber == 0) {\r\n      this.fg.controls['Name'].setValue(null);\r\n      this.fg.controls['Name'].updateValueAndValidity();\r\n      this.fg.controls['Address'].setValue(null);\r\n      this.fg.controls['Address'].updateValueAndValidity();\r\n      this.fg.controls['AccountNumber'].setValue(null);\r\n      this.fg.controls['AccountNumber'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Name.length == 0 && obj.Address == 0) {\r\n      this.fg.controls['Name'].setValue(null);\r\n      this.fg.controls['Name'].updateValueAndValidity();\r\n      this.fg.controls['Address'].setValue(null);\r\n      this.fg.controls['Address'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Name.length == 0 && obj.AccountNumber == 0) {\r\n      this.fg.controls['Name'].setValue(null);\r\n      this.fg.controls['Name'].updateValueAndValidity();\r\n      this.fg.controls['AccountNumber'].setValue(null);\r\n      this.fg.controls['AccountNumber'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Address == 0 && obj.AccountNumber == 0) {\r\n      this.fg.controls['Address'].setValue(null);\r\n      this.fg.controls['Address'].updateValueAndValidity();\r\n      this.fg.controls['AccountNumber'].setValue(null);\r\n      this.fg.controls['AccountNumber'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Name.length == 0) {\r\n      this.fg.controls['Name'].setValue(null);\r\n      this.fg.controls['Name'].updateValueAndValidity();\r\n    }\r\n    else if (obj.Address.length == 0) {\r\n      this.fg.controls['Address'].setValue(null);\r\n      this.fg.controls['Address'].updateValueAndValidity();\r\n    }\r\n    else if (obj.NDN_Number.length < 13) {\r\n      this.toastService.create(\"NTN number must be 13\", \"danger\");\r\n      this.fg.controls['Address'].updateValueAndValidity();\r\n    }\r\n    else if (obj.AccountNumber.length == 0) {\r\n      this.fg.controls['AccountNumber'].setValue(null);\r\n      this.fg.controls['AccountNumber'].updateValueAndValidity();\r\n    }\r\n    else if (this.fg.value.DeliveryRadius < 10) {\r\n      this.toastService.create(\"radius must be be 10 or higher\", \"danger\");\r\n      return false;\r\n    }\r\n    else if (this.fg.value.price < 1) {\r\n      this.toastService.create(\"Price must be greater then zero\", \"danger\");\r\n    }\r\n    else if (this.fg.value.Logo == null) {\r\n      this.toastService.create(\"Please upload the shop photo\", 'danger');\r\n    }\r\n\r\n    else {\r\n      const loading = await this.loadingController.create({ message: \"Loading\" });\r\n      await loading.present();\r\n      await this.shopservice.PostShop(this.fg.value).subscribe(\r\n        res => {\r\n          console.log(res, \"shop\");\r\n          loading.dismiss();\r\n          this.toastService.create(\"Shop Successfully Added\", \"success\");\r\n          this.router.navigate(['shopowner/shops']);\r\n\r\n        },\r\n        err => {\r\n          loading.dismiss();\r\n          this.toastService.create(err, \"danger\");\r\n        }\r\n      );\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  getUserLocation() {\r\n    this.geolocation\r\n      .getCurrentPosition({ maximumAge: 40000, timeout: 4000, enableHighAccuracy: true })\r\n      .then(resp => {\r\n\r\n        this.latitude = resp.coords.latitude;\r\n        this.longitude = resp.coords.longitude;\r\n        console.log()\r\n        this.loadMap();\r\n        console.log(\"latitude\", this.latitude, \"longitude\", this.longitude);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error getting location\", error);\r\n      });\r\n  }\r\n\r\n  loadMap() {\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, {\r\n      center: { lat: this.latitude, lng: this.longitude },\r\n      zoom: 15\r\n    });\r\n\r\n    this.myMarker = new google.maps.Marker({\r\n      position: { lat: this.latitude, lng: this.longitude },\r\n      draggable: true\r\n    });\r\n    this.map.setCenter(this.myMarker.position);\r\n    this.myMarker.setMap(this.map);\r\n\r\n    this.getAddressFromMarker(this.latitude, this.longitude, this.fg);\r\n\r\n    google.maps.event.addListener(this.myMarker, \"dragend\", () => {\r\n      this.latitude = this.myMarker.getPosition().lat();\r\n      this.longitude = this.myMarker.getPosition().lng();\r\n\r\n      // FOR UPDATING MAP LOCATION IN INPUT FIELD\r\n      this.getAddressFromMarker(this.latitude, this.longitude, this.fg);\r\n\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  getAddressFromMarker(markLat: any, markLong: any, formGroup: FormGroup) {\r\n    var latlng = new google.maps.LatLng(markLat, markLong);\r\n    var geocoder = new google.maps.Geocoder();\r\n    geocoder.geocode({ 'latLng': latlng }, function (results, status) {\r\n      if (status == google.maps.GeocoderStatus.OK) {\r\n        if (results[1]) {\r\n          var strAddress = \"\";\r\n          strAddress = strAddress + results[1].formatted_address;\r\n          formGroup.controls.Address.setValue(\"\" + strAddress);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async getGroups() {\r\n    const loading = await this.loadingController.create({ message: \"Loading\" });\r\n    await loading.present();\r\n    await this.groupservice.GetGroups().subscribe(\r\n      res => {\r\n        loading.dismiss();\r\n        if (res) {\r\n          console.log(res);\r\n          this.groups = res;\r\n\r\n          //  this.ngOnInit();\r\n        } else {\r\n          loading.dismiss();\r\n          this.toastService.create(res.Message, \"danger\");\r\n        }\r\n      },\r\n      err => {\r\n        loading.dismiss();\r\n        this.toastService.create(err, \"danger\");\r\n      }\r\n    );\r\n  }\r\n\r\n  async GetBankList() {\r\n    const loading = await this.loadingController.create({ message: \"Loading\" });\r\n    await loading.present();\r\n    await this.shopservice.GetBank().subscribe(\r\n      res => {\r\n        loading.dismiss();\r\n        if (res) {\r\n          console.log(res);\r\n          this.banklist = res;\r\n        } else {\r\n          loading.dismiss();\r\n          this.toastService.create(res.Message, \"danger\");\r\n        }\r\n      },\r\n      err => {\r\n        loading.dismiss();\r\n        this.toastService.create(err, \"danger\");\r\n      }\r\n    );\r\n  }\r\n\r\n  validation_messages = {\r\n\r\n    Name: [{ type: \"required\", message: \"Name is required.\" },\r\n    { type: \"pattern\", message: \"space is not allowed to start.\" }\r\n    ],\r\n    lastName: [{ type: \"required\", message: \"LastName is required.\" }],\r\n    NDN_Number: [\r\n      { type: \"required\", message: \"Please enter a valid NTN number:\" },\r\n      { type: \"pattern\", message: \"NTN number must be 13 character\" },\r\n    ],\r\n    mobileNumber: [\r\n      { type: \"required\", message: \"MobileNumber is required & without space.\" },\r\n      { type: \"pattern\", message: \"Mobile number like 03xxxxxxxxx and length 11 char\" }\r\n    ],\r\n    Address: [\r\n      { type: \"required\", message: \"Address is required.\" },\r\n    ],\r\n    Type: [\r\n      { type: \"required\", message: \"Shop cateory is required.\" },\r\n    ],\r\n    AccountType: [\r\n      { type: \"required\", message: \"Payment method is required.\" },\r\n    ],\r\n    Radious: [\r\n      { type: \"required\", message: \"Field is required.\" },\r\n      { type: \"min\", message: \"radius must be be 10 or higher.\" },\r\n    ],\r\n    AccountNumber: [\r\n      { type: \"required\", message: \"Account Number is required.\" },\r\n    ],\r\n    BankName: [\r\n      { type: \"required\", message: \"Account Number is required.\" },\r\n    ],\r\n  };\r\n\r\n\r\n}"]}