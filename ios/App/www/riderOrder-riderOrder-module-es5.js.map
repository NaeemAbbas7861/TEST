{"version":3,"sources":["webpack:///src/app/rider/riderOrder/order.page.html","webpack:///src/app/rider/riderOrder/order.page.scss","webpack:///src/app/rider/riderOrder/order.page.ts","webpack:///src/app/rider/riderOrder/riderOrder.module.ts","webpack:///src/app/services/order.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["OrderPageRider","route","orderservice","router","loadingController","toastService","geolocation","storage","OrderNotFound","type","snapshot","paramMap","get","then","value","userId","sid","console","log","getNewOrders","lat","lng","getRiderOrdersByStatus","doRefresh","event","create","message","loading","present","GetNewRiderOrders","subscribe","res","orders","length","dismiss","err","riderId","status","GetRiderOrdersByStatus","ngOnInit","setTimeout","target","complete","orderid","AcceptOrder","navigate","selector","template","routes","path","component","loadChildren","RiderOrderPageModule","imports","forChild","declarations","providers","OrderService","http","authenticationState","API_ORDER","BASE_URL","API_EARNING","API_RETURNDISCOUNT","id","url","httpOptions","pipe","extractData","handleError","data","post","put","riderid","ordercode","date","date1","panelty","providedIn","ToastService","toastCtrl","color","ok","duration","toast","position"],"mappings":"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","file":"riderOrder-riderOrder-module-es5.js","sourcesContent":["export default \"\\r\\n<ion-header class=\\\"mybg\\\">\\r\\n  <ion-toolbar color=\\\"mytheme\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button  style=\\\"color: black\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"ion-text-center\\\"  style=\\\"color: black\\\">{{type}} orders</ion-title>\\r\\n    <ion-back-button   style=\\\"color: black\\\" defaultHref=\\\"/\\\" slot=\\\"end\\\"> </ion-back-button>\\r\\n  </ion-toolbar>\\r\\n </ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\" color=\\\"light\\\">\\r\\n\\r\\n  <ion-card *ngFor=\\\"let order of orders\\\">\\r\\n    <ion-item>\\r\\n      <ion-label>Order Id: <b>{{order.id}}</b></ion-label>\\r\\n      <ion-button color=\\\"mycolor1\\\" size=\\\"small\\\" routerLink=\\\"{{order.id}}/items\\\"\\r\\n        *ngIf=\\\"order.orderStatus =='1'\\\">View Details</ion-button>\\r\\n\\r\\n        <ion-button color=\\\"mycolor1\\\" size=\\\"small\\\" (click)=\\\"acceptOrder(order.id , 1)\\\"\\r\\n        *ngIf=\\\"order.orderStatus =='0'\\\">Accept Order</ion-button>\\r\\n\\r\\n    </ion-item>\\r\\n    <ion-card-content>\\r\\n      <!-- <p *ngIf=\\\"shop.isVerified\\\" >Status: <span style=\\\"color: green;\\\">Active</span></p>\\r\\n      <p *ngIf=\\\"!shop.isVerified\\\" >Status: <span style=\\\"color: lightcoral;\\\">Pending</span></p> -->\\r\\n      <p *ngIf=\\\"order.orderStatus=='2'\\\">Status: <span style=\\\"color: green;\\\">Complete</span></p>\\r\\n      <!-- <p>Shop Id: {{order.shopId}}</p> -->\\r\\n      <p >Shop Id: {{order.shopId}}</p>\\r\\n      <p *ngIf=\\\"order.orderStatus =='0'\\\">Shop Name:  <strong>{{order.shop.name}}</strong></p>\\r\\n      <p *ngIf=\\\"order.orderStatus =='0'\\\">Shop Address: {{order.shop.address}}</p>\\r\\n      <p>Place Date : {{order.orderPlacementDate | date}}</p>\\r\\n      <p *ngIf=\\\"order.orderStatus=='2'\\\">Complete Date : {{order.orderDeliveryDate | date}}</p>\\r\\n      <!-- <p *ngIf=\\\"order.orderStatus=='2'\\\">Payment Method: <span style=\\\"color: red;\\\">JazzCash</span> </p> -->\\r\\n\\r\\n      <!-- <p>Total Amount: {{order.totalAmmount}}</p> -->\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <div *ngIf=\\\"OrderNotFound\\\">\\r\\n    <ion-text class=\\\"mid ion-justify-content-center\\\"> No Orders found </ion-text>\\r\\n  </div>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n</ion-content>\";","export default \".success {\\n  color: green;\\n}\\n\\n.fail {\\n  color: red;\\n}\\n\\n.mid {\\n  position: absolute;\\n  top: 50%;\\n  left: 0;\\n  right: 0;\\n  transform: translate(0, -50%);\\n  padding-left: 120px;\\n  font-size: large;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmlkZXIvcmlkZXJPcmRlci9EOlxcZ2l0a3VpY2tzYXZlXFxtdWx0aXN0b3JlLW1vYmlsZS1hcHAvc3JjXFxhcHBcXHJpZGVyXFxyaWRlck9yZGVyXFxvcmRlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3JpZGVyL3JpZGVyT3JkZXIvb3JkZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQ0NKOztBRENBO0VBQ0ksVUFBQTtBQ0VKOztBREFBO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0VBQ0EsT0FBQTtFQUNBLFFBQUE7RUFDQSw2QkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUNHSiIsImZpbGUiOiJzcmMvYXBwL3JpZGVyL3JpZGVyT3JkZXIvb3JkZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN1Y2Nlc3Mge1xyXG4gICAgY29sb3I6IGdyZWVuXHJcbn1cclxuLmZhaWwge1xyXG4gICAgY29sb3I6cmVkXHJcbn1cclxuLm1pZCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC01MCUpO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMjBweDtcclxuICAgIGZvbnQtc2l6ZTogbGFyZ2U7XHJcbiAgICBcclxufSIsIi5zdWNjZXNzIHtcbiAgY29sb3I6IGdyZWVuO1xufVxuXG4uZmFpbCB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5taWQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTUwJSk7XG4gIHBhZGRpbmctbGVmdDogMTIwcHg7XG4gIGZvbnQtc2l6ZTogbGFyZ2U7XG59Il19 */\";","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\r\nimport { Storage } from '@ionic/storage';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-riderorder',\r\n  templateUrl: './order.page.html',\r\n  styleUrls: ['./order.page.scss'],\r\n})\r\nexport class OrderPageRider implements OnInit {\r\n\r\n  orders: any\r\n  today: any;\r\n  event:any;\r\n  userId;\r\n  Latitude:any;\r\n  Longitude:any;\r\n  OrderNotFound: boolean = false;\r\n  type = this.route.snapshot.paramMap.get('type');\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    public orderservice: OrderService,\r\n    private router: Router,\r\n    public loadingController: LoadingController,\r\n    private toastService: ToastService,\r\n    private geolocation: Geolocation,\r\n    private storage: Storage,\r\n  ) {\r\n   // this.today = moment().format('YYYY-MM-DD');\r\n  }\r\n async ionViewWillEnter(){\r\n    await this.storage.get(\"User\").then(value=>{\r\n      this.userId = value.sid;\r\n    });\r\n    if (this.type == 'new')\r\n    {\r\n      // this.geolocation\r\n      //   .getCurrentPosition()\r\n      //   .then(resp => {\r\n      //     this.getNewOrders(resp.coords.latitude , resp.coords.longitude);\r\n      //   })\r\n      //   .catch(error => {\r\n      //     console.log(\"Error getting location\", error);\r\n      //   });  \r\n      //   this.getRiderOrdersByStatus(this.userId, 0); \r\n      this.storage.get('Location').then(value=>{\r\n        console.log(value);\r\n        this.getNewOrders(value.lat , value.lng);\r\n        console.log(value.lat, value.lng);\r\n      });\r\n      }\r\n\r\n      if (this.type == 'pending')\r\n      {\r\n      this.getRiderOrdersByStatus(this.userId, 1);\r\n       \r\n      }\r\n     \r\n      if (this.type == 'completed'){\r\n      this.getRiderOrdersByStatus(this.userId , 2);\r\n      \r\n    }\r\n    this.doRefresh(event);\r\n  \r\n }\r\n\r\n  ngOnInit() { \r\n \r\n  }\r\n  \r\n\r\n  async getNewOrders(lat , lng) {\r\n   \r\n    const loading = await this.loadingController.create({\r\n      message: 'Loading'\r\n    });\r\n\r\n    await loading.present();\r\n\r\n    await this.orderservice.GetNewRiderOrders(lat , lng).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        if (this.type == 'new' )\r\n        {\r\n        this.orders = res;\r\n        if(this.orders.length == 0)\r\n          {\r\n              this.OrderNotFound=true;\r\n        }\r\n       \r\n        }\r\n        loading.dismiss();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        loading.dismiss();\r\n      }\r\n    );\r\n  }\r\n\r\n  async getRiderOrdersByStatus(riderId , status) {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Loading'\r\n    });\r\n    await loading.present();\r\n    await this.orderservice.GetRiderOrdersByStatus(riderId , status).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.orders = res;\r\n        if(this.orders.length ==0)\r\n        {\r\n          this.OrderNotFound=true;\r\n        }\r\n\r\n        loading.dismiss();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        loading.dismiss();\r\n      }\r\n    );\r\n  }\r\n  doRefresh(event) {\r\n    console.log('Begin async operation');\r\n    this.ngOnInit();\r\n    setTimeout(() => {\r\n      console.log('Async operation has ended');\r\n      event.target.complete();\r\n    }, 1000);\r\n  }\r\n  async acceptOrder(orderid , status){  \r\n    if (this.orders)\r\n    {\r\n      const loading = await this.loadingController.create({ message: \"Loading\" });\r\n      await loading.present();\r\n        await this.orderservice.AcceptOrder(orderid , this.userId , status)\r\n        .subscribe(res => {        \r\n            loading.dismiss();\r\n            if (status == 1)\r\n            {\r\n            this.toastService.create(\"Order Accept successfully\", 'success');\r\n            this.router.navigate(['/rider/orders/pending/'+orderid+'/items']);\r\n            }\r\n            else\r\n            this.router.navigate(['/rider/orders/completed']);\r\n        }, (err) => {\r\n          loading.dismiss();\r\n          console.log(err)\r\n          this.toastService.create(err, 'danger');\r\n        });\r\n       }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OrderPageRider } from './order.page';\r\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderPageRider\r\n  },\r\n     { path: ':id/items', loadChildren: './items/items.module#ItemssPageModule' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [OrderPageRider],\r\n  providers:[Geolocation]\r\n})\r\nexport class RiderOrderPageModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError,map } from 'rxjs/operators';\r\nimport { ObserveOnSubscriber } from 'rxjs/internal/operators/observeOn';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService extends BaseService {\r\n\r\n  private authenticationState = new BehaviorSubject(false);\r\n  private readonly API_ORDER = `${environment.BASE_URL}order/`;\r\n  private readonly API_EARNING= `${environment.BASE_URL}earning/`;\r\n  private readonly API_RETURNDISCOUNT= `${environment.BASE_URL}returnedproduct/`;\r\n // private readonly API_PRODUCT = `${environment.BASE_URL}product/`\r\n  constructor(\r\n    protected http: HttpClient\r\n  ) { super(http); }\r\n\r\n\r\n  GetCustomerOrders(id): Observable<any> {\r\n    const url = `${this.API_ORDER}user/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  Getreturnedproduct(): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetReturnedProductbyId(id): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  DeleteProduct(id): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}${id}`;\r\n    return this.http.delete(url , this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  postreturnedProduct(data): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}`;\r\n    return this.http.post(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  EditProduct(id , data): Observable<any> {\r\n    const url = `${this.API_RETURNDISCOUNT}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n  \r\n  GetOrderItems(id): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}/orderitems`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  Allorders(): Observable<any> {\r\n    const url = `${this.API_ORDER}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  riderDashboard(id): Observable<any> {\r\n    const url = `${this.API_ORDER}rider/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  GetOrder(id): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetCustomerOrder(id): Observable<any> {\r\n    const url = `${this.API_ORDER}customer/${id}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  GetUserShopOrders(id): Observable<any> {\r\n   // const url = `${this.API_ORDER}usershop/${id}`;\r\n    const url = `${this.API_ORDER}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetNewUserShopOrders(id): Observable<any> {\r\n    const url = `${this.API_ORDER}usershop/${id}/0`;\r\n     ///const url = `${this.API_ORDER}`;\r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n\r\n   GetPendingUserShopOrders(id): Observable<any> {\r\n     const url = `${this.API_ORDER}usershop/${id}/1`;\r\n     \r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n   GetCompleteUserShopOrders(id): Observable<any> {\r\n     const url = `${this.API_ORDER}usershop/${id}/2`;\r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n   GetCancelUserShopOrders(id): Observable<any> {\r\n     const url = `${this.API_ORDER}usershop/${id}/3`;\r\n     \r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n\r\n  GetNewRiderOrders(lat , lng): Observable<any> {\r\n     const url = `${this.API_ORDER}${lat}/${lng}`;\r\n     return this.http.get(url, this.httpOptions)\r\n     .pipe(map(this.extractData), catchError(this.handleError));\r\n   }\r\n\r\n   GetRiderOrdersByStatus(id , status): Observable<any> {\r\n    const url = `${this.API_ORDER}rider/${id}/${status}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  PostOrder(data): Observable<any> {\r\n    const url = `${this.API_ORDER}`;\r\n    return this.http.post(url, data, this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  PutOrder(id , data): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}`;\r\n    return this.http.put(url, data, this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  MarksReceived(id): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}/markreceived`;\r\n    return this.http.put(url, this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  \r\n\r\n  AcceptOrder(id , riderid , status): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}/${riderid}/${status}`;\r\n    return this.http.put(url , this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  CancelOrder(id , status): Observable<any> {\r\n    const url = `${this.API_ORDER}${id}/changestatus/${status}`;\r\n    return this.http.put(url , this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  OrderCompletionCode(id,ordercode, status ): Observable<any> {\r\n    const url = `${this.API_ORDER}complete/${id}/${ordercode}/${status}`;\r\n    return this.http.put(url , this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  GetEarning(date): Observable<any> {\r\n    const url = `${this.API_EARNING}superadmin/${date}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n  GetEarningDatetoDate(date,date1): Observable<any> {\r\n    const url = `${this.API_EARNING}superadmin/${date}/${date1}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  DownloadEarningDatetoDate(date,date1): Observable<any> {\r\n    const url = `${this.API_EARNING}downloadcsv/${date}/${date1}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  GetShopEarning(id,date): Observable<any> {\r\n    const url = `${this.API_EARNING}shopowner/${id}/${date}`;\r\n    return this.http.get(url, this.httpOptions)\r\n    .pipe(map(this.extractData), catchError(this.handleError));\r\n  }\r\n\r\n  ChangePaymentStatus(id,status,panelty): Observable<any> {\r\n    const url = `${this.API_ORDER}PaymentStatus/${id}/${status}/${panelty}`;\r\n    return this.http.put(url , this.httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  toast: HTMLIonToastElement;\r\n\r\n  constructor(public toastCtrl: ToastController) { }\r\n\r\n  async create(message: string, color = \"success\", ok = false, duration = 3000) {\r\n    if (this.toast) {\r\n      this.toast.dismiss();\r\n    }\r\n\r\n    this.toast = await this.toastCtrl.create({\r\n      message,\r\n      color: color,\r\n      duration: ok ? null : duration,\r\n      position: 'bottom',\r\n      // showCloseButton: ok,\r\n      // closeButtonText: 'OK'\r\n    });\r\n    this.toast.present();\r\n  }\r\n\r\n}\r\n"]}