{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts","webpack:///src/app/services/toast.service.ts"],"names":["routes","path","component","LoginPageModule","imports","forChild","declarations","LoginPage","platform","splashScreen","fun","menuCtrl","modalController","data","formBuilder","loginservice","sharedservice","storage","router","toasterservice","loadingController","email","password","passwordType","eyeStyle","passwordShown","validation_messages","Email_Address","type","message","mobileNumber","Password","backButton","subscribeWithPriority","navigate","processNextHandler","fg","group","compose","required","pattern","minLength","get","then","value","enable","hide","create","loading","present","Login","subscribe","res","dismiss","user","getDecodedAccessToken","token","UpdateUser","updatelogin","set","err","indexOf","split","console","log","b","componentProps","terms_of_use","title","modal","privacy_policy","Error","navigateByUrl","selector","template","ToastService","toastCtrl","color","ok","duration","toast","position","providedIn"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<!-- /**\\r\\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\\r\\n *\\r\\n * Copyright Â© 2018-present Enappd. All rights reserved.\\r\\n *\\r\\n * This source code is licensed as per the terms found in the\\r\\n * LICENSE.md file in the root directory of this source .\\r\\n */ -->\\r\\n\\r\\n<ion-header padding color=\\\"mytheme\\\" class=\\\"mybg head\\\">\\r\\n  <ion-toolbar color=\\\"dark\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <!-- <ion-back-button color=\\\"dark\\\"></ion-back-button> -->\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"background: black; height: 140px;\\\">\\r\\n    <ion-img src=\\\"assets/images/logo.png\\\" class=\\\"head-image\\\"></ion-img>\\r\\n  </ion-row>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\" >\\r\\n  <ion-text class=\\\"ion-text-center\\\"><h3 color=\\\"mycolor1\\\" class=\\\"ion-no-margin ion-margin-bottom ion-text-center\\\" style=\\\"font-size: 18px; font-weight: bold; font-family: 'Courier New', Courier, monospace;\\\">Sign In</h3></ion-text>\\r\\n  <ion-grid>\\r\\n    <form [formGroup]=\\\"fg\\\">\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-item>\\r\\n          <ion-input class=\\\"ion-clearInput\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"Email_Address\\\"></ion-input>\\r\\n          <ion-icon name=\\\"mail-outline\\\" style=\\\"color: grey;\\\"></ion-icon>\\r\\n        </ion-item>\\r\\n       <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validation_messages.Email_Address\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"fg.get('Email_Address').hasError(validation.type) && (fg.get('Email_Address').dirty || fg.get('Email_Address').touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-item>\\r\\n          <ion-input class=\\\"ion-clearInput\\\" [type]=\\\"passwordType\\\" placeholder=\\\"Password\\\" formControlName=\\\"Password\\\"></ion-input>\\r\\n          <ion-icon style=\\\"color: grey;\\\"  [name]=\\\"eyeStyle\\\" slot=\\\"end\\\" (click)=\\\"togglePassword()\\\"></ion-icon>\\r\\n        </ion-item>\\r\\n       <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validation_messages.Password\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"fg.get('Password').hasError(validation.type) && (fg.get('Password').dirty &&  fg.get('Password').minlength  || fg.get('Password').touched)\\\">\\r\\n              <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-text class=\\\"ion-float-right\\\" color=\\\"medium\\\" (click)=\\\"fun.navigate('passwordreset', true)\\\"><h6  class=\\\"small ion-no-margin ion-text-end\\\" style=\\\"color: #e9b006; font-family: 'Times New Roman', Times, serif; font-size: 16px;\\\">Forgot Password?</h6></ion-text>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row style=\\\"padding: 0%;\\\">\\r\\n      <ion-col>\\r\\n        <ion-button expand=\\\"block\\\" (click)=\\\"signin()\\\" color=\\\"mycolor1\\\"><strong class=\\\"white\\\">Sign In</strong></ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </form>\\r\\n     \\r\\n    <!-- <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" color=\\\"fb\\\" class=\\\"ion-no-padding\\\"><ion-img src=\\\"assets/images/facebook_logo.png\\\" slot=\\\"start\\\" class=\\\"logo ion-margin-end\\\" ></ion-img>Facebook</ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"light ion-no-padding\\\" ><ion-img src=\\\"assets/images/google_logo.png\\\" slot=\\\"start\\\" class=\\\"logo ion-margin-end\\\" ></ion-img>Google</ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>  -->\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-button expand=\\\"block\\\" fill=\\\"outline\\\"  (click)=\\\"fun.navigate('signup')\\\" color=\\\"mycolor1\\\"><strong><ion-text color=\\\"white\\\">Create an Account</ion-text></strong></ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <!-- <div class=\\\"line ion-margin\\\"></div> -->\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-text class=\\\"ion-text-center\\\" color=\\\"medium\\\"><h6  class=\\\"small ion-no-margin\\\"><a (click)=\\\"termsOfUse()\\\">Terms and Conditions</a></h6></ion-text>\\r\\n       \\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","/**\r\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\r\n *\r\n * Copyright Â© 2018-present Enappd. All rights reserved.\r\n *\r\n * This source code is licensed as per the terms found in the\r\n * LICENSE.md file in the root directory of this source .\r\n * \r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","export default \".head-image {\\n  background-size: contain;\\n  width: 180px;\\n  align-self: center;\\n  padding-top: 10px;\\n  padding-bottom: 30px;\\n}\\n\\n.input {\\n  background-color: #f0f0f0;\\n  border: 1px solid #d2d2d2;\\n  border-radius: 9px;\\n  font-size: 0.9em !important;\\n}\\n\\n.white {\\n  color: #DB9E07;\\n}\\n\\n.title {\\n  font-size: 18px;\\n  color: white;\\n}\\n\\n.small {\\n  font-size: 13px;\\n}\\n\\n.small a {\\n  text-decoration: unset !important;\\n}\\n\\n.button-color {\\n  background-color: var(--ion-color-mytheme);\\n}\\n\\n.logo {\\n  width: 1.25em !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRDpcXGdpdGt1aWNrc2F2ZVxcbXVsdGlzdG9yZS1tb2JpbGUtYXBwL3NyY1xcYXBwXFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSx3QkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7QUNGSjs7QURJQTtFQUNJLHlCQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLDJCQUFBO0FDREo7O0FER0E7RUFDSSxjQUFBO0FDQUo7O0FERUE7RUFDSSxlQUFBO0VBQ0EsWUFBQTtBQ0NKOztBRENBO0VBQ0ksZUFBQTtBQ0VKOztBRERJO0VBQ0ksaUNBQUE7QUNHUjs7QURBQTtFQUNJLDBDQUFBO0FDR0o7O0FEREE7RUFDSSx3QkFBQTtBQ0lKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLmhlYWQge1xyXG4vLyAgICAgbWluLWhlaWdodDogdmggIWltcG9ydGFudDtcclxuLy8gfVxyXG4uaGVhZC1pbWFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgICB3aWR0aDogMTgwcHg7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAgMzBweDsgO1xyXG59XHJcbi5pbnB1dCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAyNDAsIDI0MCk7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjEwLCAyMTAsIDIxMCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA5cHg7XHJcbiAgICBmb250LXNpemU6IC45ZW0gIWltcG9ydGFudDtcclxufVxyXG4ud2hpdGV7XHJcbiAgICBjb2xvcjogI0RCOUUwNztcclxufVxyXG4udGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcbi5zbWFsbCB7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBhe1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5zZXQgIWltcG9ydGFudDtcclxuICAgIH1cclxufVxyXG4uYnV0dG9uLWNvbG9yIHtcclxuICAgIGJhY2tncm91bmQtY29sb3IgOiB2YXIoLS1pb24tY29sb3ItbXl0aGVtZSk7XHJcbn1cclxuLmxvZ28ge1xyXG4gICAgd2lkdGg6IDEuMjVlbSAhaW1wb3J0YW50O1xyXG59XHJcbiAiLCIuaGVhZC1pbWFnZSB7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgd2lkdGg6IDE4MHB4O1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMzBweDtcbn1cblxuLmlucHV0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QyZDJkMjtcbiAgYm9yZGVyLXJhZGl1czogOXB4O1xuICBmb250LXNpemU6IDAuOWVtICFpbXBvcnRhbnQ7XG59XG5cbi53aGl0ZSB7XG4gIGNvbG9yOiAjREI5RTA3O1xufVxuXG4udGl0bGUge1xuICBmb250LXNpemU6IDE4cHg7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnNtYWxsIHtcbiAgZm9udC1zaXplOiAxM3B4O1xufVxuLnNtYWxsIGEge1xuICB0ZXh0LWRlY29yYXRpb246IHVuc2V0ICFpbXBvcnRhbnQ7XG59XG5cbi5idXR0b24tY29sb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbXl0aGVtZSk7XG59XG5cbi5sb2dvIHtcbiAgd2lkdGg6IDEuMjVlbSAhaW1wb3J0YW50O1xufSJdfQ== */\";","/**\r\n * Shoppr - E-commerce app starter Ionic 4(https://www.enappd.com)\r\n *\r\n * Copyright Â© 2018-present Enappd. All rights reserved.\r\n *\r\n * This source code is licensed as per the terms found in the\r\n * LICENSE.md file in the root directory of this source .\r\n *\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FunctionsService } from '../functions.service';\r\nimport { MenuController, ModalController, Platform } from '@ionic/angular';\r\nimport { InfomodalPage } from '../infomodal/infomodal.page';\r\nimport { DataService } from '../data.service';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { LoadingController } from \"@ionic/angular\";\r\nimport * as jwt_decode from \"jwt-decode\";\r\nimport { collectExternalReferences } from '@angular/compiler';\r\nimport { EditShopPageModule } from '../shopOwner/shop/edit/editshop.module';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  email = '';\r\n  password = '';\r\n  fg: FormGroup;\r\n  passwordType: string='Password';\r\n  eyeStyle='eye';\r\n  passwordShown:boolean=false;\r\n  constructor(\r\n    private platform: Platform,\r\n    private splashScreen: SplashScreen,\r\n    private fun: FunctionsService,\r\n    private menuCtrl: MenuController,\r\n    private modalController: ModalController,\r\n    private data: DataService, \r\n    private formBuilder: FormBuilder, \r\n    private loginservice: LoginService, \r\n    private sharedservice: SharedService,\r\n    private storage: Storage, \r\n    private router: Router, \r\n    private toasterservice: ToastService, \r\n    public loadingController: LoadingController) {\r\n\r\n    this.platform.backButton.subscribeWithPriority(5, () => {\r\n      this.router.navigate(['/home']);\r\n    });\r\n\r\n    this.platform.backButton.subscribeWithPriority(10, (processNextHandler) => {\r\n      processNextHandler();\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fg = this.formBuilder.group({\r\n      'Email_Address': [null, Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(\r\n          \"^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\"\r\n        )\r\n      ])],\r\n      'Password': [null, [Validators.required, Validators.minLength(8)]],\r\n    });\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.storage.get(\"IsLoggedIn\").then(value => {\r\n      if (value)\r\n        this.router.navigate(['/home']);\r\n    });\r\n  }\r\n  ionViewDidEnter() {\r\n    this.menuCtrl.enable(false, 'start');\r\n    this.menuCtrl.enable(false, 'end');\r\n    this.splashScreen.hide();\r\n    // this.fun.navigate('home', false);\r\n  }\r\n  togglePassword()\r\n  {\r\n     if(this.passwordShown)\r\n    {\r\n      this.eyeStyle= 'eye'\r\n      this.passwordShown=false;\r\n      this.passwordType='Password';\r\n    \r\n    }\r\n    else{\r\n      this.eyeStyle= 'eye-off'\r\n      this.passwordShown=true;\r\n      this.passwordType='text';\r\n    }\r\n  }\r\n\r\n  async signin() {\r\n    // this.fun.navigate('home', false);\r\n    // original code\r\n    const loading = await this.loadingController.create({ message: \"Loading\" });\r\n    await loading.present();\r\n    await this.loginservice.Login(this.fg.value)\r\n      .subscribe(res => {\r\n        if (res) {\r\n          loading.dismiss();\r\n          // this.storage.set(environment.USER, res);\r\n          var user = this.getDecodedAccessToken(res.token);\r\n          this.sharedservice.UpdateUser(user);\r\n          this.sharedservice.updatelogin(true);\r\n          this.storage.set(\"User\", user);\r\n          this.storage.set(\"IsLoggedIn\", true);\r\n          this.router.navigate(['/home']);\r\n\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n        loading.dismiss();\r\n        if (err.message) {\r\n          this.toasterservice.create(err.message, 'danger');\r\n        }\r\n        else if (err.indexOf(\"unverified\") != -1) {\r\n          var res = err.split(\"-\")[1];\r\n          this.router.navigate(['/otpverify/' + res]);\r\n          this.storage.set(\"userid\", res);\r\n        }\r\n        else {\r\n          console.log(err);\r\n          this.toasterservice.create('Your account is Disabled', 'danger');\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  async open_modal(b) {\r\n    let modal;\r\n    if (b) {\r\n      modal = await this.modalController.create({\r\n        component: InfomodalPage,\r\n        componentProps: { value: this.data.terms_of_use, title: 'Terms of Use' }\r\n      });\r\n    } else {\r\n      modal = await this.modalController.create({\r\n        component: InfomodalPage,\r\n        componentProps: { value: this.data.privacy_policy, title: 'Privacy Policy' }\r\n      });\r\n    }\r\n    return await modal.present();\r\n  }\r\n\r\n  getDecodedAccessToken(token: string): any {\r\n    try {\r\n      return jwt_decode(token);\r\n    }\r\n    catch (Error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  termsOfUse() {\r\n    this.router.navigateByUrl('terms');\r\n  }\r\n  validation_messages = {\r\n\r\n\r\n    Email_Address: [\r\n      { type: \"required\", message: \"Email is required.\" },\r\n      { type: \"pattern\", message: \"Please enter a valid email.\" }\r\n    ],\r\n    mobileNumber: [\r\n      { type: \"required\", message: \"Contact Number is required.\" },\r\n      { type: \"pattern\", message: \"Number is like 03xxxxxxxxx and length must be 11\" }\r\n    ],\r\n    Password: [\r\n      { type: \"required\", message: \"Password is required\" },\r\n      { type: \"minlength\", message: \"Password must be 8 character\" },\r\n    ],\r\n\r\n  };\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  toast: HTMLIonToastElement;\r\n\r\n  constructor(public toastCtrl: ToastController) { }\r\n\r\n  async create(message: string, color = \"success\", ok = false, duration = 3000) {\r\n    if (this.toast) {\r\n      this.toast.dismiss();\r\n    }\r\n\r\n    this.toast = await this.toastCtrl.create({\r\n      message,\r\n      color: color,\r\n      duration: ok ? null : duration,\r\n      position: 'bottom',\r\n      // showCloseButton: ok,\r\n      // closeButtonText: 'OK'\r\n    });\r\n    this.toast.present();\r\n  }\r\n\r\n}\r\n"]}